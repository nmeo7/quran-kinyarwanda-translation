{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"expo-asset","data":{"isAsync":false}},{"name":"expo-constants","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./ExpoFontLoader","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.fontFamilyNeedsScoping = fontFamilyNeedsScoping;\n  exports.getAssetForSource = getAssetForSource;\n  exports.loadSingleFontAsync = loadSingleFontAsync;\n  exports.getNativeFontName = getNativeFontName;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _expoAsset = _$$_REQUIRE(_dependencyMap[2], \"expo-asset\");\n\n  var _expoConstants = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"expo-constants\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[4], \"react-native\");\n\n  var _ExpoFontLoader = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./ExpoFontLoader\"));\n\n  var isInClient = _expoConstants.default.appOwnership === 'expo';\n  var isInIOSStandalone = _expoConstants.default.appOwnership === 'standalone' && _reactNative.Platform.OS === 'ios';\n\n  function fontFamilyNeedsScoping(name) {\n    return (isInClient || isInIOSStandalone) && !_expoConstants.default.systemFonts.includes(name) && name !== 'System' && !name.includes(_expoConstants.default.sessionId);\n  }\n\n  function getAssetForSource(source) {\n    if (source instanceof _expoAsset.Asset) {\n      return source;\n    }\n\n    if (typeof source === 'string') {\n      return _expoAsset.Asset.fromURI(source);\n    } else if (typeof source === 'number') {\n      return _expoAsset.Asset.fromModule(source);\n    } else if (typeof source === 'object' && typeof source.uri !== 'undefined') {\n      return getAssetForSource(source.uri);\n    }\n\n    return source;\n  }\n\n  function loadSingleFontAsync(name, input) {\n    var asset;\n    return _regenerator.default.async(function loadSingleFontAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            asset = input;\n\n            if (asset.downloadAsync) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error('expo-font: loadSingleFontAsync expected asset of type Asset on native');\n\n          case 3:\n            _context.next = 5;\n            return _regenerator.default.awrap(asset.downloadAsync());\n\n          case 5:\n            if (asset.downloaded) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error(\"Failed to download asset for font \\\"\" + name + \"\\\"\");\n\n          case 7:\n            _context.next = 9;\n            return _regenerator.default.awrap(_ExpoFontLoader.default.loadAsync(getNativeFontName(name), asset.localUri));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function getNativeFontName(name) {\n    if (fontFamilyNeedsScoping(name)) {\n      return _expoConstants.default.sessionId + \"-\" + name;\n    } else {\n      return name;\n    }\n  }\n});","lineCount":91,"map":[[14,0,1,0],[16,0,2,0],[18,0,3,0],[20,0,4,0],[22,0,5,0],[22,6,5,6,"isInClient"],[22,16,5,16],[22,19,5,19,"Constants"],[22,42,5,29,"appOwnership"],[22,54,5,19],[22,59,5,46],[22,65,5,0],[23,0,6,0],[23,6,6,6,"isInIOSStandalone"],[23,23,6,23],[23,26,6,26,"Constants"],[23,49,6,36,"appOwnership"],[23,61,6,26],[23,66,6,53],[23,78,6,26],[23,82,6,69,"Platform"],[23,104,6,78,"OS"],[23,106,6,69],[23,111,6,85],[23,116,6,0],[25,0,7,7],[25,11,7,16,"fontFamilyNeedsScoping"],[25,33,7,7],[25,34,7,39,"name"],[25,38,7,7],[25,40,7,45],[26,0,8,4],[26,11,8,12],[26,12,8,13,"isInClient"],[26,22,8,23],[26,26,8,27,"isInIOSStandalone"],[26,43,8,12],[26,48,9,8],[26,49,9,9,"Constants"],[26,72,9,19,"systemFonts"],[26,83,9,9],[26,84,9,31,"includes"],[26,92,9,9],[26,93,9,40,"name"],[26,97,9,9],[26,98,8,12],[26,102,10,8,"name"],[26,106,10,12],[26,111,10,17],[26,119,8,12],[26,123,11,8],[26,124,11,9,"name"],[26,128,11,13],[26,129,11,14,"includes"],[26,137,11,9],[26,138,11,23,"Constants"],[26,161,11,33,"sessionId"],[26,170,11,9],[26,171,8,4],[27,0,12,1],[29,0,13,7],[29,11,13,16,"getAssetForSource"],[29,28,13,7],[29,29,13,34,"source"],[29,35,13,7],[29,37,13,42],[30,0,14,4],[30,8,14,8,"source"],[30,14,14,14],[30,26,14,26,"Asset"],[30,42,14,4],[30,44,14,33],[31,0,15,8],[31,13,15,15,"source"],[31,19,15,8],[32,0,16,5],[34,0,17,4],[34,8,17,8],[34,15,17,15,"source"],[34,21,17,8],[34,26,17,26],[34,34,17,4],[34,36,17,36],[35,0,18,8],[35,13,18,15,"Asset"],[35,30,18,21,"fromURI"],[35,37,18,15],[35,38,18,29,"source"],[35,44,18,15],[35,45,18,8],[36,0,19,5],[36,5,17,4],[36,11,20,9],[36,15,20,13],[36,22,20,20,"source"],[36,28,20,13],[36,33,20,31],[36,41,20,9],[36,43,20,41],[37,0,21,8],[37,13,21,15,"Asset"],[37,30,21,21,"fromModule"],[37,40,21,15],[37,41,21,32,"source"],[37,47,21,15],[37,48,21,8],[38,0,22,5],[38,5,20,9],[38,11,23,9],[38,15,23,13],[38,22,23,20,"source"],[38,28,23,13],[38,33,23,31],[38,41,23,13],[38,45,23,43],[38,52,23,50,"source"],[38,58,23,56],[38,59,23,57,"uri"],[38,62,23,43],[38,67,23,65],[38,78,23,9],[38,80,23,78],[39,0,24,8],[39,13,24,15,"getAssetForSource"],[39,30,24,32],[39,31,24,33,"source"],[39,37,24,39],[39,38,24,40,"uri"],[39,41,24,32],[39,42,24,8],[40,0,25,5],[42,0,29,4],[42,11,29,11,"source"],[42,17,29,4],[43,0,30,1],[45,0,31,7],[45,11,31,22,"loadSingleFontAsync"],[45,30,31,7],[45,31,31,42,"name"],[45,35,31,7],[45,37,31,48,"input"],[45,42,31,7],[46,0,31,7],[47,0,31,7],[48,0,31,7],[49,0,31,7],[50,0,31,7],[51,0,32,10,"asset"],[51,12,32,10,"asset"],[51,17,31,7],[51,20,32,18,"input"],[51,25,31,7],[53,0,31,7],[53,16,33,9,"asset"],[53,21,33,14],[53,22,33,15,"downloadAsync"],[53,35,31,7],[54,0,31,7],[55,0,31,7],[56,0,31,7],[58,0,31,7],[58,18,34,14],[58,22,34,18,"Error"],[58,27,34,14],[58,28,34,24],[58,99,34,14],[58,100,31,7],[60,0,31,7],[61,0,31,7],[62,0,31,7],[62,46,36,10,"asset"],[62,51,36,15],[62,52,36,16,"downloadAsync"],[62,65,36,10],[62,67,31,7],[64,0,31,7],[65,0,31,7],[65,16,37,9,"asset"],[65,21,37,14],[65,22,37,15,"downloaded"],[65,32,31,7],[66,0,31,7],[67,0,31,7],[68,0,31,7],[70,0,31,7],[70,18,38,14],[70,22,38,18,"Error"],[70,27,38,14],[70,69,38,62,"name"],[70,73,38,14],[70,81,31,7],[72,0,31,7],[73,0,31,7],[74,0,31,7],[74,46,40,10,"ExpoFontLoader"],[74,70,40,25,"loadAsync"],[74,79,40,10],[74,80,40,35,"getNativeFontName"],[74,97,40,52],[74,98,40,53,"name"],[74,102,40,52],[74,103,40,10],[74,105,40,60,"asset"],[74,110,40,65],[74,111,40,66,"localUri"],[74,119,40,10],[74,120,31,7],[76,0,31,7],[77,0,31,7],[78,0,31,7],[79,0,31,7],[80,0,31,7],[81,0,31,7],[82,0,31,7],[84,0,42,7],[84,11,42,16,"getNativeFontName"],[84,28,42,7],[84,29,42,34,"name"],[84,33,42,7],[84,35,42,40],[85,0,43,4],[85,8,43,8,"fontFamilyNeedsScoping"],[85,30,43,30],[85,31,43,31,"name"],[85,35,43,30],[85,36,43,4],[85,38,43,38],[86,0,44,8],[86,13,44,18,"Constants"],[86,36,44,28,"sessionId"],[86,45,44,8],[86,54,44,41,"name"],[86,58,44,8],[87,0,45,5],[87,5,43,4],[87,11,46,9],[88,0,47,8],[88,13,47,15,"name"],[88,17,47,8],[89,0,48,5],[90,0,49,1]],"functionMap":{"names":["<global>","fontFamilyNeedsScoping","getAssetForSource","loadSingleFontAsync","getNativeFontName"],"mappings":"AAA;OCM;CDK;OEC;CFiB;OGC;CHU;OIC;CJO"}},"type":"js/module"}]}