{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./ExpoErrorRecovery","data":{"isAsync":false}},{"name":"./ErroRecoveryStore","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _ExpoErrorRecovery = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./ExpoErrorRecovery\"));\n\n  var _ErroRecoveryStore = _$$_REQUIRE(_dependencyMap[4], \"./ErroRecoveryStore\");\n\n  if (_reactNative.Platform.OS !== 'web') {\n    var globalHandler = ErrorUtils.getGlobalHandler();\n    ErrorUtils.setGlobalHandler(function _callee(error, isFatal) {\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!_ExpoErrorRecovery.default.saveRecoveryProps) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return _regenerator.default.awrap(_ExpoErrorRecovery.default.saveRecoveryProps((0, _ErroRecoveryStore.getRecoveryPropsToSave)()));\n\n            case 3:\n              globalHandler(error, isFatal);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n  } else {\n    window.addEventListener('error', function () {\n      _ExpoErrorRecovery.default.saveRecoveryProps((0, _ErroRecoveryStore.getRecoveryPropsToSave)());\n    });\n  }\n});","lineCount":42,"map":[[6,0,1,0],[8,0,2,0],[10,0,3,0],[12,0,4,0],[12,6,4,4,"Platform"],[12,28,4,13,"OS"],[12,30,4,4],[12,35,4,20],[12,40,4,0],[12,42,4,27],[13,0,5,4],[13,8,5,10,"globalHandler"],[13,21,5,23],[13,24,5,26,"ErrorUtils"],[13,34,5,36],[13,35,5,37,"getGlobalHandler"],[13,51,5,26],[13,53,5,4],[14,0,8,4,"ErrorUtils"],[14,4,8,4,"ErrorUtils"],[14,14,8,14],[14,15,8,15,"setGlobalHandler"],[14,31,8,4],[14,32,8,32],[14,49,8,39,"error"],[14,54,8,32],[14,56,8,46,"isFatal"],[14,63,8,32],[15,0,8,32],[16,0,8,32],[17,0,8,32],[18,0,8,32],[19,0,8,32],[19,19,9,12,"ExpoErrorRecovery"],[19,46,9,30,"saveRecoveryProps"],[19,63,8,32],[20,0,8,32],[21,0,8,32],[22,0,8,32],[24,0,8,32],[25,0,8,32],[25,48,10,18,"ExpoErrorRecovery"],[25,75,10,36,"saveRecoveryProps"],[25,92,10,18],[25,93,10,54],[25,141,10,18],[25,142,8,32],[27,0,8,32],[28,0,12,8,"globalHandler"],[28,14,12,8,"globalHandler"],[28,27,12,21],[28,28,12,22,"error"],[28,33,12,21],[28,35,12,29,"isFatal"],[28,42,12,21],[28,43,12,8],[30,0,8,32],[31,0,8,32],[32,0,8,32],[33,0,8,32],[34,0,8,32],[35,0,8,32],[36,0,8,32],[36,5,8,4],[37,0,14,1],[37,3,4,0],[37,9,15,5],[38,0,16,4,"window"],[38,4,16,4,"window"],[38,10,16,10],[38,11,16,11,"addEventListener"],[38,27,16,4],[38,28,16,28],[38,35,16,4],[38,37,16,37],[38,49,16,43],[39,0,17,8,"ExpoErrorRecovery"],[39,33,17,26,"saveRecoveryProps"],[39,50,17,8],[39,51,17,44],[39,99,17,8],[40,0,18,5],[40,5,16,4],[41,0,19,1]],"functionMap":{"names":["<global>","ErrorUtils.setGlobalHandler$argument_0","window.addEventListener$argument_1"],"mappings":"AAA;gCCO;KDK;qCEG;KFE"}},"type":"js/module"}]}