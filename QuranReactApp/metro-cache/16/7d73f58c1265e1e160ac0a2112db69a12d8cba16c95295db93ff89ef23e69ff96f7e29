{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./ensure-native-module-available","data":{"isAsync":false}},{"name":"./icon-button","data":{"isAsync":false}},{"name":"./tab-bar-item-ios","data":{"isAsync":false}},{"name":"./toolbar-android","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createIconSet;\n  exports.DEFAULT_ICON_COLOR = exports.DEFAULT_ICON_SIZE = exports.NativeIconAPI = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/extends\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"react\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[12], \"react-native\");\n\n  var _ensureNativeModuleAvailable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"./ensure-native-module-available\"));\n\n  var _iconButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"./icon-button\"));\n\n  var _tabBarItemIos = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"./tab-bar-item-ios\"));\n\n  var _toolbarAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"./toolbar-android\"));\n\n  var _jsxFileName = \"/home/meo/Documents/js/quran-kinyarwanda-translation/QuranReactApp/node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/create-icon-set.js\";\n  var NativeIconAPI = _reactNative.NativeModules.RNVectorIconsManager || _reactNative.NativeModules.RNVectorIconsModule;\n  exports.NativeIconAPI = NativeIconAPI;\n  var DEFAULT_ICON_SIZE = 12;\n  exports.DEFAULT_ICON_SIZE = DEFAULT_ICON_SIZE;\n  var DEFAULT_ICON_COLOR = 'black';\n  exports.DEFAULT_ICON_COLOR = DEFAULT_ICON_COLOR;\n\n  function createIconSet(glyphMap, fontFamily, fontFile, fontStyle) {\n    var fontBasename = fontFile ? fontFile.replace(/\\.(otf|ttf)$/, '') : fontFamily;\n\n    var fontReference = _reactNative.Platform.select({\n      windows: \"Assets/\" + fontFile + \"#\" + fontFamily,\n      android: fontBasename,\n      web: fontBasename,\n      default: fontFamily\n    });\n\n    var IconNamePropType = _propTypes.default.oneOf(Object.keys(glyphMap));\n\n    var Icon = function (_PureComponent) {\n      (0, _inherits2.default)(Icon, _PureComponent);\n\n      function Icon() {\n        var _getPrototypeOf2;\n\n        var _this;\n\n        (0, _classCallCheck2.default)(this, Icon);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Icon)).call.apply(_getPrototypeOf2, [this].concat(args)));\n        _this.root = null;\n\n        _this.handleRef = function (ref) {\n          _this.root = ref;\n        };\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(Icon, [{\n        key: \"setNativeProps\",\n        value: function setNativeProps(nativeProps) {\n          if (this.root) {\n            this.root.setNativeProps(nativeProps);\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props = this.props,\n              name = _this$props.name,\n              size = _this$props.size,\n              color = _this$props.color,\n              style = _this$props.style,\n              children = _this$props.children,\n              props = (0, _objectWithoutProperties2.default)(_this$props, [\"name\", \"size\", \"color\", \"style\", \"children\"]);\n          var glyph = name ? glyphMap[name] || '?' : '';\n\n          if (typeof glyph === 'number') {\n            glyph = String.fromCharCode(glyph);\n          }\n\n          var styleDefaults = {\n            fontSize: size,\n            color: color\n          };\n          var styleOverrides = {\n            fontFamily: fontReference,\n            fontWeight: 'normal',\n            fontStyle: 'normal'\n          };\n          props.style = [styleDefaults, style, styleOverrides, fontStyle || {}];\n          props.ref = this.handleRef;\n          return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            }\n          }), glyph, children);\n        }\n      }]);\n      return Icon;\n    }(_react.PureComponent);\n\n    Icon.propTypes = {\n      allowFontScaling: _propTypes.default.bool,\n      name: IconNamePropType,\n      size: _propTypes.default.number,\n      color: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n      children: _propTypes.default.node,\n      style: _propTypes.default.any\n    };\n    Icon.defaultProps = {\n      size: DEFAULT_ICON_SIZE,\n      allowFontScaling: false\n    };\n    var imageSourceCache = {};\n\n    function getImageSource(name) {\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ICON_SIZE;\n      var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ICON_COLOR;\n      (0, _ensureNativeModuleAvailable.default)();\n      var glyph = glyphMap[name] || '?';\n\n      if (typeof glyph === 'number') {\n        glyph = String.fromCharCode(glyph);\n      }\n\n      var processedColor = (0, _reactNative.processColor)(color);\n      var cacheKey = glyph + \":\" + size + \":\" + processedColor;\n\n      var scale = _reactNative.PixelRatio.get();\n\n      return new Promise(function (resolve, reject) {\n        var cached = imageSourceCache[cacheKey];\n\n        if (typeof cached !== 'undefined') {\n          if (!cached || cached instanceof Error) {\n            reject(cached);\n          } else {\n            resolve({\n              uri: cached,\n              scale: scale\n            });\n          }\n        } else {\n          NativeIconAPI.getImageForFont(fontReference, glyph, size, processedColor, function (err, image) {\n            var error = typeof err === 'string' ? new Error(err) : err;\n            imageSourceCache[cacheKey] = image || error || false;\n\n            if (!error && image) {\n              resolve({\n                uri: image,\n                scale: scale\n              });\n            } else {\n              reject(error);\n            }\n          });\n        }\n      });\n    }\n\n    function loadFont() {\n      var file = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : fontFile;\n\n      if (_reactNative.Platform.OS === 'ios') {\n        (0, _ensureNativeModuleAvailable.default)();\n\n        if (!file) {\n          return Promise.reject(new Error('Unable to load font, because no file was specified. '));\n        }\n\n        return NativeIconAPI.loadFontWithFileName.apply(NativeIconAPI, (0, _toConsumableArray2.default)(file.split('.')));\n      }\n\n      return Promise.resolve();\n    }\n\n    function hasIcon(name) {\n      return Object.prototype.hasOwnProperty.call(glyphMap, name);\n    }\n\n    function getRawGlyphMap() {\n      return glyphMap;\n    }\n\n    function getFontFamily() {\n      return fontReference;\n    }\n\n    Icon.Button = (0, _iconButton.default)(Icon);\n    Icon.TabBarItem = (0, _tabBarItemIos.default)(IconNamePropType, getImageSource);\n    Icon.TabBarItemIOS = Icon.TabBarItem;\n    Icon.ToolbarAndroid = (0, _toolbarAndroid.default)(IconNamePropType, getImageSource);\n    Icon.getImageSource = getImageSource;\n    Icon.loadFont = loadFont;\n    Icon.hasIcon = hasIcon;\n    Icon.getRawGlyphMap = getRawGlyphMap;\n    Icon.getFontFamily = getFontFamily;\n    return Icon;\n  }\n});","lineCount":229,"map":[[28,0,1,0],[30,0,2,0],[32,0,3,0],[34,0,5,0],[36,0,6,0],[38,0,7,0],[40,0,8,0],[43,0,10,7],[43,6,10,13,"NativeIconAPI"],[43,19,10,26],[43,22,11,2,"NativeModules"],[43,49,11,16,"RNVectorIconsManager"],[43,69,11,2],[43,73,11,40,"NativeModules"],[43,100,11,54,"RNVectorIconsModule"],[43,119,10,7],[45,0,13,7],[45,6,13,13,"DEFAULT_ICON_SIZE"],[45,23,13,30],[45,26,13,33],[45,28,13,7],[47,0,14,7],[47,6,14,13,"DEFAULT_ICON_COLOR"],[47,24,14,31],[47,27,14,34],[47,34,14,7],[50,0,16,15],[50,11,16,24,"createIconSet"],[50,24,16,15],[50,25,17,2,"glyphMap"],[50,33,16,15],[50,35,18,2,"fontFamily"],[50,45,16,15],[50,47,19,2,"fontFile"],[50,55,16,15],[50,57,20,2,"fontStyle"],[50,66,16,15],[50,68,21,2],[51,0,23,2],[51,8,23,8,"fontBasename"],[51,20,23,20],[51,23,23,23,"fontFile"],[51,31,23,31],[51,34,24,6,"fontFile"],[51,42,24,14],[51,43,24,15,"replace"],[51,50,24,6],[51,51,24,23],[51,65,24,6],[51,67,24,39],[51,69,24,6],[51,70,23,31],[51,73,25,6,"fontFamily"],[51,83,23,2],[53,0,27,2],[53,8,27,8,"fontReference"],[53,21,27,21],[53,24,27,24,"Platform"],[53,46,27,33,"select"],[53,52,27,24],[53,53,27,40],[54,0,28,4,"windows"],[54,6,28,4,"windows"],[54,13,28,11],[54,27,28,23,"fontFile"],[54,35,28,11],[54,44,28,35,"fontFamily"],[54,54,27,40],[55,0,29,4,"android"],[55,6,29,4,"android"],[55,13,29,11],[55,15,29,13,"fontBasename"],[55,27,27,40],[56,0,30,4,"web"],[56,6,30,4,"web"],[56,9,30,7],[56,11,30,9,"fontBasename"],[56,23,27,40],[57,0,31,4,"default"],[57,6,31,4,"default"],[57,13,31,11],[57,15,31,13,"fontFamily"],[58,0,27,40],[58,5,27,24],[58,6,27,2],[60,0,34,2],[60,8,34,8,"IconNamePropType"],[60,24,34,24],[60,27,34,27,"PropTypes"],[60,46,34,37,"oneOf"],[60,51,34,27],[60,52,34,43,"Object"],[60,58,34,49],[60,59,34,50,"keys"],[60,63,34,43],[60,64,34,55,"glyphMap"],[60,72,34,43],[60,73,34,27],[60,74,34,2],[62,0,21,2],[62,8,36,8,"Icon"],[62,12,21,2],[63,0,21,2],[65,0,21,2],[66,0,21,2],[68,0,21,2],[70,0,21,2],[72,0,21,2],[73,0,21,2],[74,0,21,2],[76,0,21,2],[77,0,21,2],[77,14,51,4,"root"],[77,18,21,2],[77,21,51,11],[77,25,21,2],[79,0,21,2],[79,14,59,4,"handleRef"],[79,23,21,2],[79,26,59,16],[79,36,59,16,"ref"],[79,39,59,19],[79,41,59,23],[80,0,60,6],[80,16,60,11,"root"],[80,20,60,6],[80,23,60,18,"ref"],[80,26,60,6],[81,0,61,5],[81,9,21,2],[83,0,21,2],[84,0,21,2],[86,0,21,2],[87,0,21,2],[88,0,21,2],[88,39,53,19,"nativeProps"],[88,50,21,2],[88,52,53,32],[89,0,54,6],[89,14,54,10],[89,19,54,15,"root"],[89,23,54,6],[89,25,54,21],[90,0,55,8],[90,17,55,13,"root"],[90,21,55,8],[90,22,55,18,"setNativeProps"],[90,36,55,8],[90,37,55,33,"nativeProps"],[90,48,55,8],[91,0,56,7],[92,0,57,5],[93,0,21,2],[94,0,21,2],[95,0,21,2],[95,33,63,13],[96,0,63,13],[96,28,64,63],[96,33,64,68,"props"],[96,38,63,13],[97,0,63,13],[97,14,64,14,"name"],[97,18,63,13],[97,33,64,14,"name"],[97,37,63,13],[98,0,63,13],[98,14,64,20,"size"],[98,18,63,13],[98,33,64,20,"size"],[98,37,63,13],[99,0,63,13],[99,14,64,26,"color"],[99,19,63,13],[99,34,64,26,"color"],[99,39,63,13],[100,0,63,13],[100,14,64,33,"style"],[100,19,63,13],[100,34,64,33,"style"],[100,39,63,13],[101,0,63,13],[101,14,64,40,"children"],[101,22,63,13],[101,37,64,40,"children"],[101,45,63,13],[102,0,63,13],[102,14,64,53,"props"],[102,19,63,13],[103,0,66,6],[103,14,66,10,"glyph"],[103,19,66,15],[103,22,66,18,"name"],[103,26,66,22],[103,29,66,25,"glyphMap"],[103,37,66,33],[103,38,66,34,"name"],[103,42,66,33],[103,43,66,25],[103,47,66,43],[103,50,66,22],[103,53,66,49],[103,55,66,6],[105,0,67,6],[105,14,67,10],[105,21,67,17,"glyph"],[105,26,67,10],[105,31,67,27],[105,39,67,6],[105,41,67,37],[106,0,68,8,"glyph"],[106,12,68,8,"glyph"],[106,17,68,13],[106,20,68,16,"String"],[106,26,68,22],[106,27,68,23,"fromCharCode"],[106,39,68,16],[106,40,68,36,"glyph"],[106,45,68,16],[106,46,68,8],[107,0,69,7],[109,0,71,6],[109,14,71,12,"styleDefaults"],[109,27,71,25],[109,30,71,28],[110,0,72,8,"fontSize"],[110,12,72,8,"fontSize"],[110,20,72,16],[110,22,72,18,"size"],[110,26,71,28],[111,0,73,8,"color"],[111,12,73,8,"color"],[111,17,73,13],[111,19,73,8,"color"],[112,0,71,28],[112,11,71,6],[113,0,76,6],[113,14,76,12,"styleOverrides"],[113,28,76,26],[113,31,76,29],[114,0,77,8,"fontFamily"],[114,12,77,8,"fontFamily"],[114,22,77,18],[114,24,77,20,"fontReference"],[114,37,76,29],[115,0,78,8,"fontWeight"],[115,12,78,8,"fontWeight"],[115,22,78,18],[115,24,78,20],[115,32,76,29],[116,0,79,8,"fontStyle"],[116,12,79,8,"fontStyle"],[116,21,79,17],[116,23,79,19],[117,0,76,29],[117,11,76,6],[118,0,82,6,"props"],[118,10,82,6,"props"],[118,15,82,11],[118,16,82,12,"style"],[118,21,82,6],[118,24,82,20],[118,25,82,21,"styleDefaults"],[118,38,82,20],[118,40,82,36,"style"],[118,45,82,20],[118,47,82,43,"styleOverrides"],[118,61,82,20],[118,63,82,59,"fontStyle"],[118,72,82,68],[118,76,82,72],[118,78,82,20],[118,79,82,6],[119,0,83,6,"props"],[119,10,83,6,"props"],[119,15,83,11],[119,16,83,12,"ref"],[119,19,83,6],[119,22,83,18],[119,27,83,23,"handleRef"],[119,36,83,6],[120,0,85,6],[120,17,86,8],[120,46,86,9],[120,63,86,8],[120,92,86,18,"props"],[120,97,86,8],[121,0,86,8],[122,0,86,8],[123,0,86,8],[124,0,86,8],[125,0,86,8],[125,14,87,11,"glyph"],[125,19,86,8],[125,21,88,11,"children"],[125,29,86,8],[125,30,85,6],[126,0,91,5],[127,0,21,2],[128,0,21,2],[129,0,21,2],[129,6,36,21,"PureComponent"],[129,26,21,2],[131,0,36,8,"Icon"],[131,4,36,8,"Icon"],[131,8,21,2],[131,9,37,11,"propTypes"],[131,18,21,2],[131,21,37,23],[132,0,38,6,"allowFontScaling"],[132,6,38,6,"allowFontScaling"],[132,22,38,22],[132,24,38,24,"PropTypes"],[132,43,38,34,"bool"],[132,47,37,23],[133,0,39,6,"name"],[133,6,39,6,"name"],[133,10,39,10],[133,12,39,12,"IconNamePropType"],[133,28,37,23],[134,0,40,6,"size"],[134,6,40,6,"size"],[134,10,40,10],[134,12,40,12,"PropTypes"],[134,31,40,22,"number"],[134,37,37,23],[135,0,41,6,"color"],[135,6,41,6,"color"],[135,11,41,11],[135,13,41,13,"PropTypes"],[135,32,41,23,"oneOfType"],[135,41,41,13],[135,42,41,33],[135,43,41,34,"PropTypes"],[135,62,41,44,"string"],[135,68,41,33],[135,70,41,52,"PropTypes"],[135,89,41,62,"number"],[135,95,41,33],[135,96,41,13],[135,97,37,23],[136,0,42,6,"children"],[136,6,42,6,"children"],[136,14,42,14],[136,16,42,16,"PropTypes"],[136,35,42,26,"node"],[136,39,37,23],[137,0,43,6,"style"],[137,6,43,6,"style"],[137,11,43,11],[137,13,43,13,"PropTypes"],[137,32,43,23,"any"],[138,0,37,23],[138,5,21,2],[139,0,36,8,"Icon"],[139,4,36,8,"Icon"],[139,8,21,2],[139,9,46,11,"defaultProps"],[139,21,21,2],[139,24,46,26],[140,0,47,6,"size"],[140,6,47,6,"size"],[140,10,47,10],[140,12,47,12,"DEFAULT_ICON_SIZE"],[140,29,46,26],[141,0,48,6,"allowFontScaling"],[141,6,48,6,"allowFontScaling"],[141,22,48,22],[141,24,48,24],[142,0,46,26],[142,5,21,2],[143,0,94,2],[143,8,94,8,"imageSourceCache"],[143,24,94,24],[143,27,94,27],[143,29,94,2],[145,0,96,2],[145,13,96,11,"getImageSource"],[145,27,96,2],[145,28,97,4,"name"],[145,32,96,2],[145,34,100,4],[146,0,100,4],[146,10,98,4,"size"],[146,14,100,4],[146,85,98,11,"DEFAULT_ICON_SIZE"],[146,102,100,4],[147,0,100,4],[147,10,99,4,"color"],[147,15,100,4],[147,86,99,12,"DEFAULT_ICON_COLOR"],[147,104,100,4],[148,0,101,4],[149,0,103,4],[149,10,103,8,"glyph"],[149,15,103,13],[149,18,103,16,"glyphMap"],[149,26,103,24],[149,27,103,25,"name"],[149,31,103,24],[149,32,103,16],[149,36,103,34],[149,39,103,4],[151,0,104,4],[151,10,104,8],[151,17,104,15,"glyph"],[151,22,104,8],[151,27,104,25],[151,35,104,4],[151,37,104,35],[152,0,105,6,"glyph"],[152,8,105,6,"glyph"],[152,13,105,11],[152,16,105,14,"String"],[152,22,105,20],[152,23,105,21,"fromCharCode"],[152,35,105,14],[152,36,105,34,"glyph"],[152,41,105,14],[152,42,105,6],[153,0,106,5],[155,0,108,4],[155,10,108,10,"processedColor"],[155,24,108,24],[155,27,108,27],[155,58,108,40,"color"],[155,63,108,27],[155,64,108,4],[156,0,109,4],[156,10,109,10,"cacheKey"],[156,18,109,18],[156,21,109,24,"glyph"],[156,26,109,18],[156,35,109,33,"size"],[156,39,109,18],[156,48,109,41,"processedColor"],[156,62,109,4],[158,0,110,4],[158,10,110,10,"scale"],[158,15,110,15],[158,18,110,18,"PixelRatio"],[158,42,110,29,"get"],[158,45,110,18],[158,47,110,4],[160,0,112,4],[160,13,112,11],[160,17,112,15,"Promise"],[160,24,112,11],[160,25,112,23],[160,35,112,24,"resolve"],[160,42,112,23],[160,44,112,33,"reject"],[160,50,112,23],[160,52,112,44],[161,0,113,6],[161,12,113,12,"cached"],[161,18,113,18],[161,21,113,21,"imageSourceCache"],[161,37,113,37],[161,38,113,38,"cacheKey"],[161,46,113,37],[161,47,113,6],[163,0,114,6],[163,12,114,10],[163,19,114,17,"cached"],[163,25,114,10],[163,30,114,28],[163,41,114,6],[163,43,114,41],[164,0,115,8],[164,14,115,12],[164,15,115,13,"cached"],[164,21,115,12],[164,25,115,23,"cached"],[164,31,115,29],[164,43,115,41,"Error"],[164,48,115,8],[164,50,115,48],[165,0,116,10,"reject"],[165,12,116,10,"reject"],[165,18,116,16],[165,19,116,17,"cached"],[165,25,116,16],[165,26,116,10],[166,0,117,9],[166,11,115,8],[166,17,117,15],[167,0,118,10,"resolve"],[167,12,118,10,"resolve"],[167,19,118,17],[167,20,118,18],[168,0,118,20,"uri"],[168,14,118,20,"uri"],[168,17,118,23],[168,19,118,25,"cached"],[168,25,118,18],[169,0,118,33,"scale"],[169,14,118,33,"scale"],[169,19,118,38],[169,21,118,33,"scale"],[170,0,118,18],[170,13,118,17],[170,14,118,10],[171,0,119,9],[172,0,120,7],[172,9,114,6],[172,15,120,13],[173,0,121,8,"NativeIconAPI"],[173,10,121,8,"NativeIconAPI"],[173,23,121,21],[173,24,121,22,"getImageForFont"],[173,39,121,8],[173,40,122,10,"fontReference"],[173,53,121,8],[173,55,123,10,"glyph"],[173,60,121,8],[173,62,124,10,"size"],[173,66,121,8],[173,68,125,10,"processedColor"],[173,82,121,8],[173,84,126,10],[173,94,126,11,"err"],[173,97,126,10],[173,99,126,16,"image"],[173,104,126,10],[173,106,126,26],[174,0,127,12],[174,16,127,18,"error"],[174,21,127,23],[174,24,127,26],[174,31,127,33,"err"],[174,34,127,26],[174,39,127,41],[174,47,127,26],[174,50,127,52],[174,54,127,56,"Error"],[174,59,127,52],[174,60,127,62,"err"],[174,63,127,52],[174,64,127,26],[174,67,127,69,"err"],[174,70,127,12],[175,0,128,12,"imageSourceCache"],[175,12,128,12,"imageSourceCache"],[175,28,128,28],[175,29,128,29,"cacheKey"],[175,37,128,28],[175,38,128,12],[175,41,128,41,"image"],[175,46,128,46],[175,50,128,50,"error"],[175,55,128,41],[175,59,128,59],[175,64,128,12],[177,0,129,12],[177,16,129,16],[177,17,129,17,"error"],[177,22,129,16],[177,26,129,26,"image"],[177,31,129,12],[177,33,129,33],[178,0,130,14,"resolve"],[178,14,130,14,"resolve"],[178,21,130,21],[178,22,130,22],[179,0,130,24,"uri"],[179,16,130,24,"uri"],[179,19,130,27],[179,21,130,29,"image"],[179,26,130,22],[180,0,130,36,"scale"],[180,16,130,36,"scale"],[180,21,130,41],[180,23,130,36,"scale"],[181,0,130,22],[181,15,130,21],[181,16,130,14],[182,0,131,13],[182,13,129,12],[182,19,131,19],[183,0,132,14,"reject"],[183,14,132,14,"reject"],[183,20,132,20],[183,21,132,21,"error"],[183,26,132,20],[183,27,132,14],[184,0,133,13],[185,0,134,11],[185,11,121,8],[186,0,136,7],[187,0,137,5],[187,7,112,11],[187,8,112,4],[188,0,138,3],[190,0,140,2],[190,13,140,11,"loadFont"],[190,21,140,2],[190,24,140,37],[191,0,140,37],[191,10,140,20,"file"],[191,14,140,37],[191,85,140,27,"fontFile"],[191,93,140,37],[193,0,141,4],[193,10,141,8,"Platform"],[193,32,141,17,"OS"],[193,34,141,8],[193,39,141,24],[193,44,141,4],[193,46,141,31],[194,0,142,6],[196,0,143,6],[196,12,143,10],[196,13,143,11,"file"],[196,17,143,6],[196,19,143,17],[197,0,144,8],[197,17,144,15,"Promise"],[197,24,144,22],[197,25,144,23,"reject"],[197,31,144,15],[197,32,145,10],[197,36,145,14,"Error"],[197,41,145,10],[197,42,145,20],[197,96,145,10],[197,97,144,15],[197,98,144,8],[198,0,147,7],[200,0,148,6],[200,15,148,13,"NativeIconAPI"],[200,28,148,26],[200,29,148,27,"loadFontWithFileName"],[200,49,148,13],[200,56,148,13,"NativeIconAPI"],[200,69,148,26],[200,104,148,51,"file"],[200,108,148,55],[200,109,148,56,"split"],[200,114,148,51],[200,115,148,62],[200,118,148,51],[200,119,148,26],[200,121,148,6],[201,0,149,5],[203,0,150,4],[203,13,150,11,"Promise"],[203,20,150,18],[203,21,150,19,"resolve"],[203,28,150,11],[203,30,150,4],[204,0,151,3],[206,0,153,2],[206,13,153,11,"hasIcon"],[206,20,153,2],[206,21,153,19,"name"],[206,25,153,2],[206,27,153,25],[207,0,154,4],[207,13,154,11,"Object"],[207,19,154,17],[207,20,154,18,"prototype"],[207,29,154,11],[207,30,154,28,"hasOwnProperty"],[207,44,154,11],[207,45,154,43,"call"],[207,49,154,11],[207,50,154,48,"glyphMap"],[207,58,154,11],[207,60,154,58,"name"],[207,64,154,11],[207,65,154,4],[208,0,155,3],[210,0,157,2],[210,13,157,11,"getRawGlyphMap"],[210,27,157,2],[210,30,157,28],[211,0,158,4],[211,13,158,11,"glyphMap"],[211,21,158,4],[212,0,159,3],[214,0,161,2],[214,13,161,11,"getFontFamily"],[214,26,161,2],[214,29,161,27],[215,0,162,4],[215,13,162,11,"fontReference"],[215,26,162,4],[216,0,163,3],[218,0,165,2,"Icon"],[218,4,165,2,"Icon"],[218,8,165,6],[218,9,165,7,"Button"],[218,15,165,2],[218,18,165,16],[218,43,165,42,"Icon"],[218,47,165,16],[218,48,165,2],[219,0,166,2,"Icon"],[219,4,166,2,"Icon"],[219,8,166,6],[219,9,166,7,"TabBarItem"],[219,19,166,2],[219,22,166,20],[219,50,167,4,"IconNamePropType"],[219,66,166,20],[219,68,168,4,"getImageSource"],[219,82,166,20],[219,83,166,2],[220,0,170,2,"Icon"],[220,4,170,2,"Icon"],[220,8,170,6],[220,9,170,7,"TabBarItemIOS"],[220,22,170,2],[220,25,170,23,"Icon"],[220,29,170,27],[220,30,170,28,"TabBarItem"],[220,40,170,2],[221,0,171,2,"Icon"],[221,4,171,2,"Icon"],[221,8,171,6],[221,9,171,7,"ToolbarAndroid"],[221,23,171,2],[221,26,171,24],[221,55,172,4,"IconNamePropType"],[221,71,171,24],[221,73,173,4,"getImageSource"],[221,87,171,24],[221,88,171,2],[222,0,175,2,"Icon"],[222,4,175,2,"Icon"],[222,8,175,6],[222,9,175,7,"getImageSource"],[222,23,175,2],[222,26,175,24,"getImageSource"],[222,40,175,2],[223,0,176,2,"Icon"],[223,4,176,2,"Icon"],[223,8,176,6],[223,9,176,7,"loadFont"],[223,17,176,2],[223,20,176,18,"loadFont"],[223,28,176,2],[224,0,177,2,"Icon"],[224,4,177,2,"Icon"],[224,8,177,6],[224,9,177,7,"hasIcon"],[224,16,177,2],[224,19,177,17,"hasIcon"],[224,26,177,2],[225,0,178,2,"Icon"],[225,4,178,2,"Icon"],[225,8,178,6],[225,9,178,7,"getRawGlyphMap"],[225,23,178,2],[225,26,178,24,"getRawGlyphMap"],[225,40,178,2],[226,0,179,2,"Icon"],[226,4,179,2,"Icon"],[226,8,179,6],[226,9,179,7,"getFontFamily"],[226,22,179,2],[226,25,179,23,"getFontFamily"],[226,38,179,2],[227,0,181,2],[227,11,181,9,"Icon"],[227,15,181,2],[228,0,182,1]],"functionMap":{"names":["<global>","createIconSet","Icon","Icon#setNativeProps","Icon#handleRef","Icon#render","getImageSource","Promise$argument_0","NativeIconAPI.getImageForFont$argument_4","loadFont","hasIcon","getRawGlyphMap","getFontFamily"],"mappings":"AAA;eCe;ECoB;ICiB;KDI;gBEE;KFE;IGE;KH4B;GDC;EKI;uBCgB;UCc;WDQ;KDG;GLC;EQE;GRW;ESE;GTE;EUE;GVE;EWE;GXE;CDmB"}},"type":"js/module"}]}