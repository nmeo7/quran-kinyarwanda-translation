{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"unimodules-permissions-interface","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"./ExpoLocation","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getProviderStatusAsync = getProviderStatusAsync;\n  exports.enableNetworkProviderAsync = enableNetworkProviderAsync;\n  exports.getCurrentPositionAsync = getCurrentPositionAsync;\n  exports.getLastKnownPositionAsync = getLastKnownPositionAsync;\n  exports.getHeadingAsync = getHeadingAsync;\n  exports.watchHeadingAsync = watchHeadingAsync;\n  exports.geocodeAsync = geocodeAsync;\n  exports.reverseGeocodeAsync = reverseGeocodeAsync;\n  exports.setApiKey = setApiKey;\n  exports.watchPositionAsync = watchPositionAsync;\n  exports.getPermissionsAsync = getPermissionsAsync;\n  exports.requestPermissionsAsync = requestPermissionsAsync;\n  exports.hasServicesEnabledAsync = hasServicesEnabledAsync;\n  exports.isBackgroundLocationAvailableAsync = isBackgroundLocationAvailableAsync;\n  exports.startLocationUpdatesAsync = startLocationUpdatesAsync;\n  exports.stopLocationUpdatesAsync = stopLocationUpdatesAsync;\n  exports.hasStartedLocationUpdatesAsync = hasStartedLocationUpdatesAsync;\n  exports.startGeofencingAsync = startGeofencingAsync;\n  exports.stopGeofencingAsync = stopGeofencingAsync;\n  exports.hasStartedGeofencingAsync = hasStartedGeofencingAsync;\n  exports.installWebGeolocationPolyfill = installWebGeolocationPolyfill;\n  exports._getCurrentWatchId = _getCurrentWatchId;\n  Object.defineProperty(exports, \"PermissionStatus\", {\n    enumerable: true,\n    get: function get() {\n      return _unimodulesPermissionsInterface.PermissionStatus;\n    }\n  });\n  exports.EventEmitter = exports.GeofencingRegionState = exports.GeofencingEventType = exports.ActivityType = exports.Accuracy = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[2], \"@unimodules/core\");\n\n  var _unimodulesPermissionsInterface = _$$_REQUIRE(_dependencyMap[3], \"unimodules-permissions-interface\");\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"invariant\"));\n\n  var _ExpoLocation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./ExpoLocation\"));\n\n  var LocationEventEmitter = new _core.EventEmitter(_ExpoLocation.default);\n  exports.EventEmitter = LocationEventEmitter;\n  var LocationAccuracy;\n  exports.Accuracy = LocationAccuracy;\n\n  (function (LocationAccuracy) {\n    LocationAccuracy[LocationAccuracy[\"Lowest\"] = 1] = \"Lowest\";\n    LocationAccuracy[LocationAccuracy[\"Low\"] = 2] = \"Low\";\n    LocationAccuracy[LocationAccuracy[\"Balanced\"] = 3] = \"Balanced\";\n    LocationAccuracy[LocationAccuracy[\"High\"] = 4] = \"High\";\n    LocationAccuracy[LocationAccuracy[\"Highest\"] = 5] = \"Highest\";\n    LocationAccuracy[LocationAccuracy[\"BestForNavigation\"] = 6] = \"BestForNavigation\";\n  })(LocationAccuracy || (exports.Accuracy = LocationAccuracy = {}));\n\n  var LocationActivityType;\n  exports.ActivityType = LocationActivityType;\n\n  (function (LocationActivityType) {\n    LocationActivityType[LocationActivityType[\"Other\"] = 1] = \"Other\";\n    LocationActivityType[LocationActivityType[\"AutomotiveNavigation\"] = 2] = \"AutomotiveNavigation\";\n    LocationActivityType[LocationActivityType[\"Fitness\"] = 3] = \"Fitness\";\n    LocationActivityType[LocationActivityType[\"OtherNavigation\"] = 4] = \"OtherNavigation\";\n    LocationActivityType[LocationActivityType[\"Airborne\"] = 5] = \"Airborne\";\n  })(LocationActivityType || (exports.ActivityType = LocationActivityType = {}));\n\n  var GeofencingEventType;\n  exports.GeofencingEventType = GeofencingEventType;\n\n  (function (GeofencingEventType) {\n    GeofencingEventType[GeofencingEventType[\"Enter\"] = 1] = \"Enter\";\n    GeofencingEventType[GeofencingEventType[\"Exit\"] = 2] = \"Exit\";\n  })(GeofencingEventType || (exports.GeofencingEventType = GeofencingEventType = {}));\n\n  var GeofencingRegionState;\n  exports.GeofencingRegionState = GeofencingRegionState;\n\n  (function (GeofencingRegionState) {\n    GeofencingRegionState[GeofencingRegionState[\"Unknown\"] = 0] = \"Unknown\";\n    GeofencingRegionState[GeofencingRegionState[\"Inside\"] = 1] = \"Inside\";\n    GeofencingRegionState[GeofencingRegionState[\"Outside\"] = 2] = \"Outside\";\n  })(GeofencingRegionState || (exports.GeofencingRegionState = GeofencingRegionState = {}));\n\n  var nextWatchId = 0;\n  var headingId;\n\n  function _getNextWatchId() {\n    nextWatchId++;\n    return nextWatchId;\n  }\n\n  function _getCurrentWatchId() {\n    return nextWatchId;\n  }\n\n  var watchCallbacks = {};\n  var deviceEventSubscription;\n  var headingEventSub;\n  var googleApiKey;\n  var googleApiUrl = 'https://maps.googleapis.com/maps/api/geocode/json';\n\n  function getProviderStatusAsync() {\n    return _regenerator.default.async(function getProviderStatusAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", _ExpoLocation.default.getProviderStatusAsync());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function enableNetworkProviderAsync() {\n    return _regenerator.default.async(function enableNetworkProviderAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(_core.Platform.OS === 'android')) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", _ExpoLocation.default.enableNetworkProviderAsync());\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  function getCurrentPositionAsync() {\n    var options,\n        _args3 = arguments;\n    return _regenerator.default.async(function getCurrentPositionAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n            return _context3.abrupt(\"return\", _ExpoLocation.default.getCurrentPositionAsync(options));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  }\n\n  function getLastKnownPositionAsync() {\n    return _regenerator.default.async(function getLastKnownPositionAsync$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", _ExpoLocation.default.getLastKnownPositionAsync());\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  }\n\n  function getHeadingAsync() {\n    return _regenerator.default.async(function getHeadingAsync$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", new Promise(function _callee(resolve, reject) {\n              var tries, headingSub, done, subscription, _tries;\n\n              return _regenerator.default.async(function _callee$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.prev = 0;\n\n                      if (!headingEventSub) {\n                        _context5.next = 6;\n                        break;\n                      }\n\n                      tries = 0;\n                      headingSub = LocationEventEmitter.addListener('Expo.headingChanged', function (_ref) {\n                        var heading = _ref.heading;\n\n                        if (heading.accuracy > 1 || tries > 5) {\n                          resolve(heading);\n                          LocationEventEmitter.removeSubscription(headingSub);\n                        } else {\n                          tries += 1;\n                        }\n                      });\n                      _context5.next = 12;\n                      break;\n\n                    case 6:\n                      done = false;\n                      _tries = 0;\n                      _context5.next = 10;\n                      return _regenerator.default.awrap(watchHeadingAsync(function (heading) {\n                        if (!done) {\n                          if (heading.accuracy > 1 || _tries > 5) {\n                            subscription.remove();\n                            resolve(heading);\n                            done = true;\n                          } else {\n                            _tries += 1;\n                          }\n                        } else {\n                          subscription.remove();\n                        }\n                      }));\n\n                    case 10:\n                      subscription = _context5.sent;\n\n                      if (done) {\n                        subscription.remove();\n                      }\n\n                    case 12:\n                      _context5.next = 17;\n                      break;\n\n                    case 14:\n                      _context5.prev = 14;\n                      _context5.t0 = _context5[\"catch\"](0);\n                      reject(_context5.t0);\n\n                    case 17:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, null, null, [[0, 14]]);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    });\n  }\n\n  function watchHeadingAsync(callback) {\n    return _regenerator.default.async(function watchHeadingAsync$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (headingEventSub) {\n              _removeHeadingWatcher(headingId);\n            }\n\n            headingEventSub = LocationEventEmitter.addListener('Expo.headingChanged', function (_ref2) {\n              var watchId = _ref2.watchId,\n                  heading = _ref2.heading;\n              var callback = watchCallbacks[watchId];\n\n              if (callback) {\n                callback(heading);\n              } else {\n                _ExpoLocation.default.removeWatchAsync(watchId);\n              }\n            });\n            headingId = _getNextWatchId();\n            watchCallbacks[headingId] = callback;\n            _context7.next = 6;\n            return _regenerator.default.awrap(_ExpoLocation.default.watchDeviceHeading(headingId));\n\n          case 6:\n            return _context7.abrupt(\"return\", {\n              remove: function remove() {\n                _removeHeadingWatcher(headingId);\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    });\n  }\n\n  function _removeHeadingWatcher(watchId) {\n    if (!watchCallbacks[watchId]) {\n      return;\n    }\n\n    delete watchCallbacks[watchId];\n\n    _ExpoLocation.default.removeWatchAsync(watchId);\n\n    if (headingEventSub) {\n      LocationEventEmitter.removeSubscription(headingEventSub);\n      headingEventSub = null;\n    }\n  }\n\n  function _maybeInitializeEmitterSubscription() {\n    if (!deviceEventSubscription) {\n      deviceEventSubscription = LocationEventEmitter.addListener('Expo.locationChanged', function (_ref3) {\n        var watchId = _ref3.watchId,\n            location = _ref3.location;\n        var callback = watchCallbacks[watchId];\n\n        if (callback) {\n          callback(location);\n        } else {\n          _ExpoLocation.default.removeWatchAsync(watchId);\n        }\n      });\n    }\n  }\n\n  function geocodeAsync(address) {\n    return _regenerator.default.async(function geocodeAsync$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            return _context8.abrupt(\"return\", _ExpoLocation.default.geocodeAsync(address).catch(function (error) {\n              var platformUsesGoogleMaps = _core.Platform.OS === 'android' || _core.Platform.OS === 'web';\n\n              if (platformUsesGoogleMaps && error.code === 'E_NO_GEOCODER') {\n                if (!googleApiKey) {\n                  throw new _core.CodedError(error.code, error.message + \" Please set a Google API Key to use geocoding.\");\n                }\n\n                return _googleGeocodeAsync(address);\n              }\n\n              throw error;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    });\n  }\n\n  function reverseGeocodeAsync(location) {\n    return _regenerator.default.async(function reverseGeocodeAsync$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            if (!(typeof location.latitude !== 'number' || typeof location.longitude !== 'number')) {\n              _context9.next = 2;\n              break;\n            }\n\n            throw new TypeError('Location should be an object with number properties `latitude` and `longitude`.');\n\n          case 2:\n            return _context9.abrupt(\"return\", _ExpoLocation.default.reverseGeocodeAsync(location).catch(function (error) {\n              var platformUsesGoogleMaps = _core.Platform.OS === 'android' || _core.Platform.OS === 'web';\n\n              if (platformUsesGoogleMaps && error.code === 'E_NO_GEOCODER') {\n                if (!googleApiKey) {\n                  throw new _core.CodedError(error.code, error.message + \" Please set a Google API Key to use geocoding.\");\n                }\n\n                return _googleReverseGeocodeAsync(location);\n              }\n\n              throw error;\n            }));\n\n          case 3:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    });\n  }\n\n  function setApiKey(apiKey) {\n    googleApiKey = apiKey;\n  }\n\n  function _googleGeocodeAsync(address) {\n    var result, resultObject;\n    return _regenerator.default.async(function _googleGeocodeAsync$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return _regenerator.default.awrap(fetch(googleApiUrl + \"?key=\" + googleApiKey + \"&address=\" + encodeURI(address)));\n\n          case 2:\n            result = _context10.sent;\n            _context10.next = 5;\n            return _regenerator.default.awrap(result.json());\n\n          case 5:\n            resultObject = _context10.sent;\n\n            if (!(resultObject.status === 'ZERO_RESULTS')) {\n              _context10.next = 8;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", []);\n\n          case 8:\n            assertGeocodeResults(resultObject);\n            return _context10.abrupt(\"return\", resultObject.results.map(function (result) {\n              var location = result.geometry.location;\n              return {\n                latitude: location.lat,\n                longitude: location.lng\n              };\n            }));\n\n          case 10:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    });\n  }\n\n  function _googleReverseGeocodeAsync(options) {\n    var result, resultObject;\n    return _regenerator.default.async(function _googleReverseGeocodeAsync$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return _regenerator.default.awrap(fetch(googleApiUrl + \"?key=\" + googleApiKey + \"&latlng=\" + options.latitude + \",\" + options.longitude));\n\n          case 2:\n            result = _context11.sent;\n            _context11.next = 5;\n            return _regenerator.default.awrap(result.json());\n\n          case 5:\n            resultObject = _context11.sent;\n\n            if (!(resultObject.status === 'ZERO_RESULTS')) {\n              _context11.next = 8;\n              break;\n            }\n\n            return _context11.abrupt(\"return\", []);\n\n          case 8:\n            assertGeocodeResults(resultObject);\n            return _context11.abrupt(\"return\", resultObject.results.map(function (result) {\n              var address = {};\n              result.address_components.forEach(function (component) {\n                if (component.types.includes('locality')) {\n                  address.city = component.long_name;\n                } else if (component.types.includes('street_address')) {\n                  address.street = component.long_name;\n                } else if (component.types.includes('administrative_area_level_1')) {\n                  address.region = component.long_name;\n                } else if (component.types.includes('country')) {\n                  address.country = component.long_name;\n                } else if (component.types.includes('postal_code')) {\n                  address.postalCode = component.long_name;\n                } else if (component.types.includes('point_of_interest')) {\n                  address.name = component.long_name;\n                }\n              });\n              return address;\n            }));\n\n          case 10:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    });\n  }\n\n  function assertGeocodeResults(resultObject) {\n    var status = resultObject.status,\n        error_message = resultObject.error_message;\n\n    if (status !== 'ZERO_RESULTS' && status !== 'OK') {\n      if (error_message) {\n        throw new _core.CodedError(status, error_message);\n      } else if (status === 'UNKNOWN_ERROR') {\n        throw new _core.CodedError(status, 'the request could not be processed due to a server error. The request may succeed if you try again.');\n      }\n\n      throw new _core.CodedError(status, \"An error occurred during geocoding.\");\n    }\n  }\n\n  function watchPosition(success, error, options) {\n    _maybeInitializeEmitterSubscription();\n\n    var watchId = _getNextWatchId();\n\n    watchCallbacks[watchId] = success;\n\n    _ExpoLocation.default.watchPositionImplAsync(watchId, options).catch(function (err) {\n      _removeWatcher(watchId);\n\n      error({\n        watchId: watchId,\n        message: err.message,\n        code: err.code\n      });\n    });\n\n    return watchId;\n  }\n\n  function watchPositionAsync(options, callback) {\n    var watchId;\n    return _regenerator.default.async(function watchPositionAsync$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _maybeInitializeEmitterSubscription();\n\n            watchId = _getNextWatchId();\n            watchCallbacks[watchId] = callback;\n            _context12.next = 5;\n            return _regenerator.default.awrap(_ExpoLocation.default.watchPositionImplAsync(watchId, options));\n\n          case 5:\n            return _context12.abrupt(\"return\", {\n              remove: function remove() {\n                _removeWatcher(watchId);\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    });\n  }\n\n  function clearWatch(watchId) {\n    _removeWatcher(watchId);\n  }\n\n  function _removeWatcher(watchId) {\n    if (!watchCallbacks[watchId]) {\n      return;\n    }\n\n    _ExpoLocation.default.removeWatchAsync(watchId);\n\n    delete watchCallbacks[watchId];\n\n    if (Object.keys(watchCallbacks).length === 0 && deviceEventSubscription) {\n      LocationEventEmitter.removeSubscription(deviceEventSubscription);\n      deviceEventSubscription = null;\n    }\n  }\n\n  function getCurrentPosition(success) {\n    var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    (0, _invariant.default)(typeof success === 'function', 'Must provide a valid success callback.');\n    (0, _invariant.default)(typeof options === 'object', 'options must be an object.');\n\n    _getCurrentPositionAsyncWrapper(success, error, options);\n  }\n\n  function _getCurrentPositionAsyncWrapper(success, error, options) {\n    var result;\n    return _regenerator.default.async(function _getCurrentPositionAsyncWrapper$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.prev = 0;\n            _context13.next = 3;\n            return _regenerator.default.awrap(_ExpoLocation.default.requestPermissionsAsync());\n\n          case 3:\n            _context13.next = 5;\n            return _regenerator.default.awrap(getCurrentPositionAsync(options));\n\n          case 5:\n            result = _context13.sent;\n            success(result);\n            _context13.next = 12;\n            break;\n\n          case 9:\n            _context13.prev = 9;\n            _context13.t0 = _context13[\"catch\"](0);\n            error(_context13.t0);\n\n          case 12:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, null, null, [[0, 9]]);\n  }\n\n  function getPermissionsAsync() {\n    return _regenerator.default.async(function getPermissionsAsync$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.next = 2;\n            return _regenerator.default.awrap(_ExpoLocation.default.getPermissionsAsync());\n\n          case 2:\n            return _context14.abrupt(\"return\", _context14.sent);\n\n          case 3:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    });\n  }\n\n  function requestPermissionsAsync() {\n    return _regenerator.default.async(function requestPermissionsAsync$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.next = 2;\n            return _regenerator.default.awrap(_ExpoLocation.default.requestPermissionsAsync());\n\n          case 2:\n            return _context15.abrupt(\"return\", _context15.sent);\n\n          case 3:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    });\n  }\n\n  function hasServicesEnabledAsync() {\n    return _regenerator.default.async(function hasServicesEnabledAsync$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            _context16.next = 2;\n            return _regenerator.default.awrap(_ExpoLocation.default.hasServicesEnabledAsync());\n\n          case 2:\n            return _context16.abrupt(\"return\", _context16.sent);\n\n          case 3:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    });\n  }\n\n  function _validateTaskName(taskName) {\n    (0, _invariant.default)(taskName && typeof taskName === 'string', '`taskName` must be a non-empty string.');\n  }\n\n  function isBackgroundLocationAvailableAsync() {\n    var providerStatus;\n    return _regenerator.default.async(function isBackgroundLocationAvailableAsync$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            _context17.next = 2;\n            return _regenerator.default.awrap(getProviderStatusAsync());\n\n          case 2:\n            providerStatus = _context17.sent;\n            return _context17.abrupt(\"return\", providerStatus.backgroundModeEnabled);\n\n          case 4:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    });\n  }\n\n  function startLocationUpdatesAsync(taskName) {\n    var options,\n        _args18 = arguments;\n    return _regenerator.default.async(function startLocationUpdatesAsync$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            options = _args18.length > 1 && _args18[1] !== undefined ? _args18[1] : {\n              accuracy: LocationAccuracy.Balanced\n            };\n\n            _validateTaskName(taskName);\n\n            _context18.next = 4;\n            return _regenerator.default.awrap(_ExpoLocation.default.startLocationUpdatesAsync(taskName, options));\n\n          case 4:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    });\n  }\n\n  function stopLocationUpdatesAsync(taskName) {\n    return _regenerator.default.async(function stopLocationUpdatesAsync$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            _validateTaskName(taskName);\n\n            _context19.next = 3;\n            return _regenerator.default.awrap(_ExpoLocation.default.stopLocationUpdatesAsync(taskName));\n\n          case 3:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    });\n  }\n\n  function hasStartedLocationUpdatesAsync(taskName) {\n    return _regenerator.default.async(function hasStartedLocationUpdatesAsync$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            _validateTaskName(taskName);\n\n            return _context20.abrupt(\"return\", _ExpoLocation.default.hasStartedLocationUpdatesAsync(taskName));\n\n          case 2:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    });\n  }\n\n  function _validateRegions(regions) {\n    if (!regions || regions.length === 0) {\n      throw new Error('Regions array cannot be empty. Use `stopGeofencingAsync` if you want to stop geofencing all regions');\n    }\n\n    for (var _iterator = regions, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n      var _ref4;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref4 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref4 = _i.value;\n      }\n\n      var _region = _ref4;\n\n      if (typeof _region.latitude !== 'number') {\n        throw new TypeError(\"Region's latitude must be a number. Got '\" + _region.latitude + \"' instead.\");\n      }\n\n      if (typeof _region.longitude !== 'number') {\n        throw new TypeError(\"Region's longitude must be a number. Got '\" + _region.longitude + \"' instead.\");\n      }\n\n      if (typeof _region.radius !== 'number') {\n        throw new TypeError(\"Region's radius must be a number. Got '\" + _region.radius + \"' instead.\");\n      }\n    }\n  }\n\n  function startGeofencingAsync(taskName) {\n    var regions,\n        _args21 = arguments;\n    return _regenerator.default.async(function startGeofencingAsync$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            regions = _args21.length > 1 && _args21[1] !== undefined ? _args21[1] : [];\n\n            _validateTaskName(taskName);\n\n            _validateRegions(regions);\n\n            _context21.next = 5;\n            return _regenerator.default.awrap(_ExpoLocation.default.startGeofencingAsync(taskName, {\n              regions: regions\n            }));\n\n          case 5:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    });\n  }\n\n  function stopGeofencingAsync(taskName) {\n    return _regenerator.default.async(function stopGeofencingAsync$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            _validateTaskName(taskName);\n\n            _context22.next = 3;\n            return _regenerator.default.awrap(_ExpoLocation.default.stopGeofencingAsync(taskName));\n\n          case 3:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    });\n  }\n\n  function hasStartedGeofencingAsync(taskName) {\n    return _regenerator.default.async(function hasStartedGeofencingAsync$(_context23) {\n      while (1) {\n        switch (_context23.prev = _context23.next) {\n          case 0:\n            _validateTaskName(taskName);\n\n            return _context23.abrupt(\"return\", _ExpoLocation.default.hasStartedGeofencingAsync(taskName));\n\n          case 2:\n          case \"end\":\n            return _context23.stop();\n        }\n      }\n    });\n  }\n\n  function installWebGeolocationPolyfill() {\n    if (_core.Platform.OS !== 'web') {\n      window.navigator.geolocation = {\n        getCurrentPosition: getCurrentPosition,\n        watchPosition: watchPosition,\n        clearWatch: clearWatch,\n        stopObserving: function stopObserving() {}\n      };\n    }\n  }\n});","lineCount":860,"map":[[39,0,1,0],[41,0,2,0],[43,0,3,0],[45,0,4,0],[47,0,5,0],[47,6,5,6,"LocationEventEmitter"],[47,26,5,26],[47,29,5,29],[47,33,5,33,"EventEmitter"],[47,51,5,29],[47,52,5,46,"ExpoLocation"],[47,73,5,29],[47,74,5,0],[49,0,7,0],[49,6,7,4,"LocationAccuracy"],[49,22,7,0],[52,0,8,0],[52,3,8,1],[52,13,8,11,"LocationAccuracy"],[52,29,8,1],[52,31,8,29],[53,0,9,4,"LocationAccuracy"],[53,4,9,4,"LocationAccuracy"],[53,20,9,20],[53,21,9,21,"LocationAccuracy"],[53,37,9,37],[53,38,9,38],[53,46,9,37],[53,47,9,21],[53,50,9,50],[53,51,9,20],[53,52,9,4],[53,55,9,55],[53,63,9,4],[54,0,10,4,"LocationAccuracy"],[54,4,10,4,"LocationAccuracy"],[54,20,10,20],[54,21,10,21,"LocationAccuracy"],[54,37,10,37],[54,38,10,38],[54,43,10,37],[54,44,10,21],[54,47,10,47],[54,48,10,20],[54,49,10,4],[54,52,10,52],[54,57,10,4],[55,0,11,4,"LocationAccuracy"],[55,4,11,4,"LocationAccuracy"],[55,20,11,20],[55,21,11,21,"LocationAccuracy"],[55,37,11,37],[55,38,11,38],[55,48,11,37],[55,49,11,21],[55,52,11,52],[55,53,11,20],[55,54,11,4],[55,57,11,57],[55,67,11,4],[56,0,12,4,"LocationAccuracy"],[56,4,12,4,"LocationAccuracy"],[56,20,12,20],[56,21,12,21,"LocationAccuracy"],[56,37,12,37],[56,38,12,38],[56,44,12,37],[56,45,12,21],[56,48,12,48],[56,49,12,20],[56,50,12,4],[56,53,12,53],[56,59,12,4],[57,0,13,4,"LocationAccuracy"],[57,4,13,4,"LocationAccuracy"],[57,20,13,20],[57,21,13,21,"LocationAccuracy"],[57,37,13,37],[57,38,13,38],[57,47,13,37],[57,48,13,21],[57,51,13,51],[57,52,13,20],[57,53,13,4],[57,56,13,56],[57,65,13,4],[58,0,14,4,"LocationAccuracy"],[58,4,14,4,"LocationAccuracy"],[58,20,14,20],[58,21,14,21,"LocationAccuracy"],[58,37,14,37],[58,38,14,38],[58,57,14,37],[58,58,14,21],[58,61,14,61],[58,62,14,20],[58,63,14,4],[58,66,14,66],[58,85,14,4],[59,0,15,1],[59,3,8,0],[59,5,15,3,"LocationAccuracy"],[59,21,15,19],[59,45,15,24,"LocationAccuracy"],[59,61,15,40],[59,64,15,43],[59,66,15,19],[59,67,8,0],[61,0,16,0],[61,6,16,4,"LocationActivityType"],[61,26,16,0],[64,0,17,0],[64,3,17,1],[64,13,17,11,"LocationActivityType"],[64,33,17,1],[64,35,17,33],[65,0,18,4,"LocationActivityType"],[65,4,18,4,"LocationActivityType"],[65,24,18,24],[65,25,18,25,"LocationActivityType"],[65,45,18,45],[65,46,18,46],[65,53,18,45],[65,54,18,25],[65,57,18,57],[65,58,18,24],[65,59,18,4],[65,62,18,62],[65,69,18,4],[66,0,19,4,"LocationActivityType"],[66,4,19,4,"LocationActivityType"],[66,24,19,24],[66,25,19,25,"LocationActivityType"],[66,45,19,45],[66,46,19,46],[66,68,19,45],[66,69,19,25],[66,72,19,72],[66,73,19,24],[66,74,19,4],[66,77,19,77],[66,99,19,4],[67,0,20,4,"LocationActivityType"],[67,4,20,4,"LocationActivityType"],[67,24,20,24],[67,25,20,25,"LocationActivityType"],[67,45,20,45],[67,46,20,46],[67,55,20,45],[67,56,20,25],[67,59,20,59],[67,60,20,24],[67,61,20,4],[67,64,20,64],[67,73,20,4],[68,0,21,4,"LocationActivityType"],[68,4,21,4,"LocationActivityType"],[68,24,21,24],[68,25,21,25,"LocationActivityType"],[68,45,21,45],[68,46,21,46],[68,63,21,45],[68,64,21,25],[68,67,21,67],[68,68,21,24],[68,69,21,4],[68,72,21,72],[68,89,21,4],[69,0,22,4,"LocationActivityType"],[69,4,22,4,"LocationActivityType"],[69,24,22,24],[69,25,22,25,"LocationActivityType"],[69,45,22,45],[69,46,22,46],[69,56,22,45],[69,57,22,25],[69,60,22,60],[69,61,22,24],[69,62,22,4],[69,65,22,65],[69,75,22,4],[70,0,23,1],[70,3,17,0],[70,5,23,3,"LocationActivityType"],[70,25,23,23],[70,53,23,28,"LocationActivityType"],[70,73,23,48],[70,76,23,51],[70,78,23,23],[70,79,17,0],[72,0,25,7],[72,6,25,11,"GeofencingEventType"],[72,25,25,7],[75,0,26,0],[75,3,26,1],[75,13,26,11,"GeofencingEventType"],[75,32,26,1],[75,34,26,32],[76,0,27,4,"GeofencingEventType"],[76,4,27,4,"GeofencingEventType"],[76,23,27,23],[76,24,27,24,"GeofencingEventType"],[76,43,27,43],[76,44,27,44],[76,51,27,43],[76,52,27,24],[76,55,27,55],[76,56,27,23],[76,57,27,4],[76,60,27,60],[76,67,27,4],[77,0,28,4,"GeofencingEventType"],[77,4,28,4,"GeofencingEventType"],[77,23,28,23],[77,24,28,24,"GeofencingEventType"],[77,43,28,43],[77,44,28,44],[77,50,28,43],[77,51,28,24],[77,54,28,54],[77,55,28,23],[77,56,28,4],[77,59,28,59],[77,65,28,4],[78,0,29,1],[78,3,26,0],[78,5,29,3,"GeofencingEventType"],[78,24,29,22],[78,59,29,27,"GeofencingEventType"],[78,78,29,46],[78,81,29,49],[78,83,29,22],[78,84,26,0],[80,0,30,7],[80,6,30,11,"GeofencingRegionState"],[80,27,30,7],[83,0,31,0],[83,3,31,1],[83,13,31,11,"GeofencingRegionState"],[83,34,31,1],[83,36,31,34],[84,0,32,4,"GeofencingRegionState"],[84,4,32,4,"GeofencingRegionState"],[84,25,32,25],[84,26,32,26,"GeofencingRegionState"],[84,47,32,47],[84,48,32,48],[84,57,32,47],[84,58,32,26],[84,61,32,61],[84,62,32,25],[84,63,32,4],[84,66,32,66],[84,75,32,4],[85,0,33,4,"GeofencingRegionState"],[85,4,33,4,"GeofencingRegionState"],[85,25,33,25],[85,26,33,26,"GeofencingRegionState"],[85,47,33,47],[85,48,33,48],[85,56,33,47],[85,57,33,26],[85,60,33,60],[85,61,33,25],[85,62,33,4],[85,65,33,65],[85,73,33,4],[86,0,34,4,"GeofencingRegionState"],[86,4,34,4,"GeofencingRegionState"],[86,25,34,25],[86,26,34,26,"GeofencingRegionState"],[86,47,34,47],[86,48,34,48],[86,57,34,47],[86,58,34,26],[86,61,34,61],[86,62,34,25],[86,63,34,4],[86,66,34,66],[86,75,34,4],[87,0,35,1],[87,3,31,0],[87,5,35,3,"GeofencingRegionState"],[87,26,35,24],[87,63,35,29,"GeofencingRegionState"],[87,84,35,50],[87,87,35,53],[87,89,35,24],[87,90,31,0],[89,0,36,0],[89,6,36,4,"nextWatchId"],[89,17,36,15],[89,20,36,18],[89,21,36,0],[90,0,37,0],[90,6,37,4,"headingId"],[90,15,37,0],[92,0,38,0],[92,11,38,9,"_getNextWatchId"],[92,26,38,0],[92,29,38,27],[93,0,39,4,"nextWatchId"],[93,4,39,4,"nextWatchId"],[93,15,39,15],[94,0,40,4],[94,11,40,11,"nextWatchId"],[94,22,40,4],[95,0,41,1],[97,0,42,0],[97,11,42,9,"_getCurrentWatchId"],[97,29,42,0],[97,32,42,30],[98,0,43,4],[98,11,43,11,"nextWatchId"],[98,22,43,4],[99,0,44,1],[101,0,45,0],[101,6,45,4,"watchCallbacks"],[101,20,45,18],[101,23,45,21],[101,25,45,0],[102,0,46,0],[102,6,46,4,"deviceEventSubscription"],[102,29,46,0],[103,0,47,0],[103,6,47,4,"headingEventSub"],[103,21,47,0],[104,0,48,0],[104,6,48,4,"googleApiKey"],[104,18,48,0],[105,0,49,0],[105,6,49,6,"googleApiUrl"],[105,18,49,18],[105,21,49,21],[105,72,49,0],[107,0,50,7],[107,11,50,22,"getProviderStatusAsync"],[107,33,50,7],[108,0,50,7],[109,0,50,7],[110,0,50,7],[111,0,50,7],[112,0,50,7],[112,45,51,11,"ExpoLocation"],[112,67,51,24,"getProviderStatusAsync"],[112,89,51,11],[112,91,50,7],[114,0,50,7],[115,0,50,7],[116,0,50,7],[117,0,50,7],[118,0,50,7],[119,0,50,7],[120,0,50,7],[122,0,53,7],[122,11,53,22,"enableNetworkProviderAsync"],[122,37,53,7],[123,0,53,7],[124,0,53,7],[125,0,53,7],[126,0,53,7],[127,0,53,7],[127,18,58,8,"Platform"],[127,33,58,17,"OS"],[127,35,58,8],[127,40,58,24],[127,49,53,7],[128,0,53,7],[129,0,53,7],[130,0,53,7],[132,0,53,7],[132,46,59,15,"ExpoLocation"],[132,68,59,28,"enableNetworkProviderAsync"],[132,94,59,15],[132,96,53,7],[134,0,53,7],[135,0,53,7],[136,0,53,7],[137,0,53,7],[138,0,53,7],[139,0,53,7],[140,0,53,7],[142,0,62,7],[142,11,62,22,"getCurrentPositionAsync"],[142,34,62,7],[143,0,62,7],[144,0,62,7],[145,0,62,7],[146,0,62,7],[147,0,62,7],[148,0,62,7],[149,0,62,46,"options"],[149,12,62,46,"options"],[149,19,62,7],[149,81,62,56],[149,83,62,7],[150,0,62,7],[150,46,63,11,"ExpoLocation"],[150,68,63,24,"getCurrentPositionAsync"],[150,91,63,11],[150,92,63,48,"options"],[150,99,63,11],[150,100,62,7],[152,0,62,7],[153,0,62,7],[154,0,62,7],[155,0,62,7],[156,0,62,7],[157,0,62,7],[158,0,62,7],[160,0,65,7],[160,11,65,22,"getLastKnownPositionAsync"],[160,36,65,7],[161,0,65,7],[162,0,65,7],[163,0,65,7],[164,0,65,7],[165,0,65,7],[165,46,66,11,"ExpoLocation"],[165,68,66,24,"getLastKnownPositionAsync"],[165,93,66,11],[165,95,65,7],[167,0,65,7],[168,0,65,7],[169,0,65,7],[170,0,65,7],[171,0,65,7],[172,0,65,7],[173,0,65,7],[175,0,71,7],[175,11,71,22,"getHeadingAsync"],[175,26,71,7],[176,0,71,7],[177,0,71,7],[178,0,71,7],[179,0,71,7],[180,0,71,7],[180,46,72,11],[180,50,72,15,"Promise"],[180,57,72,11],[180,58,72,23],[180,75,72,30,"resolve"],[180,82,72,23],[180,84,72,39,"reject"],[180,90,72,23],[181,0,72,23],[183,0,72,23],[184,0,72,23],[185,0,72,23],[186,0,72,23],[187,0,72,23],[189,0,72,23],[189,27,75,16,"headingEventSub"],[189,42,72,23],[190,0,72,23],[191,0,72,23],[192,0,72,23],[194,0,76,20,"tries"],[194,22,76,20,"tries"],[194,27,72,23],[194,30,76,28],[194,31,72,23],[195,0,77,22,"headingSub"],[195,22,77,22,"headingSub"],[195,32,72,23],[195,35,77,35,"LocationEventEmitter"],[195,55,77,55],[195,56,77,56,"addListener"],[195,67,77,35],[195,68,77,68],[195,89,77,35],[195,91,77,91],[195,107,77,108],[196,0,77,108],[196,28,77,94,"heading"],[196,35,77,108],[196,43,77,94,"heading"],[196,50,77,108],[198,0,78,20],[198,28,78,24,"heading"],[198,35,78,31],[198,36,78,32,"accuracy"],[198,44,78,24],[198,47,78,43],[198,48,78,24],[198,52,78,48,"tries"],[198,57,78,53],[198,60,78,56],[198,61,78,20],[198,63,78,59],[199,0,79,24,"resolve"],[199,26,79,24,"resolve"],[199,33,79,31],[199,34,79,32,"heading"],[199,41,79,31],[199,42,79,24],[200,0,80,24,"LocationEventEmitter"],[200,26,80,24,"LocationEventEmitter"],[200,46,80,44],[200,47,80,45,"removeSubscription"],[200,65,80,24],[200,66,80,64,"headingSub"],[200,76,80,24],[201,0,81,21],[201,25,78,20],[201,31,82,25],[202,0,83,24,"tries"],[202,26,83,24,"tries"],[202,31,83,29],[202,35,83,33],[202,36,83,24],[203,0,84,21],[204,0,85,17],[204,23,77,35],[204,24,72,23],[205,0,72,23],[206,0,72,23],[208,0,72,23],[209,0,88,20,"done"],[209,22,88,20,"done"],[209,26,72,23],[209,29,88,27],[209,34,72,23],[210,0,90,20,"tries"],[210,22,90,20,"tries"],[210,28,72,23],[210,31,90,28],[210,32,72,23],[211,0,72,23],[212,0,72,23],[212,56,91,37,"watchHeadingAsync"],[212,73,91,54],[212,74,91,55],[212,84,91,56,"heading"],[212,91,91,55],[212,93,91,68],[213,0,92,20],[213,28,92,24],[213,29,92,25,"done"],[213,33,92,20],[213,35,92,31],[214,0,93,24],[214,30,93,28,"heading"],[214,37,93,35],[214,38,93,36,"accuracy"],[214,46,93,28],[214,49,93,47],[214,50,93,28],[214,54,93,52,"tries"],[214,60,93,57],[214,63,93,60],[214,64,93,24],[214,66,93,63],[215,0,94,28,"subscription"],[215,28,94,28,"subscription"],[215,40,94,40],[215,41,94,41,"remove"],[215,47,94,28],[216,0,95,28,"resolve"],[216,28,95,28,"resolve"],[216,35,95,35],[216,36,95,36,"heading"],[216,43,95,35],[216,44,95,28],[217,0,96,28,"done"],[217,28,96,28,"done"],[217,32,96,32],[217,35,96,35],[217,39,96,28],[218,0,97,25],[218,27,93,24],[218,33,98,29],[219,0,99,28,"tries"],[219,28,99,28,"tries"],[219,34,99,33],[219,38,99,37],[219,39,99,28],[220,0,100,25],[221,0,101,21],[221,25,92,20],[221,31,102,25],[222,0,103,24,"subscription"],[222,26,103,24,"subscription"],[222,38,103,36],[222,39,103,37,"remove"],[222,45,103,24],[223,0,104,21],[224,0,105,17],[224,23,91,54],[224,24,72,23],[226,0,72,23],[227,0,91,16,"subscription"],[227,22,91,16,"subscription"],[227,34,72,23],[229,0,106,16],[229,26,106,20,"done"],[229,30,106,16],[229,32,106,26],[230,0,107,20,"subscription"],[230,24,107,20,"subscription"],[230,36,107,32],[230,37,107,33,"remove"],[230,43,107,20],[231,0,108,17],[233,0,72,23],[234,0,72,23],[235,0,72,23],[237,0,72,23],[238,0,72,23],[239,0,72,23],[240,0,112,12,"reject"],[240,22,112,12,"reject"],[240,28,112,18],[240,42,112,12],[242,0,72,23],[243,0,72,23],[244,0,72,23],[245,0,72,23],[246,0,72,23],[247,0,72,23],[248,0,72,23],[248,13,72,11],[248,14,71,7],[250,0,71,7],[251,0,71,7],[252,0,71,7],[253,0,71,7],[254,0,71,7],[255,0,71,7],[256,0,71,7],[258,0,116,7],[258,11,116,22,"watchHeadingAsync"],[258,28,116,7],[258,29,116,40,"callback"],[258,37,116,7],[259,0,116,7],[260,0,116,7],[261,0,116,7],[262,0,116,7],[263,0,118,4],[263,16,118,8,"headingEventSub"],[263,31,118,4],[263,33,118,25],[264,0,119,8,"_removeHeadingWatcher"],[264,14,119,8,"_removeHeadingWatcher"],[264,35,119,29],[264,36,119,30,"headingId"],[264,45,119,29],[264,46,119,8],[265,0,120,5],[267,0,121,4,"headingEventSub"],[267,12,121,4,"headingEventSub"],[267,27,121,19],[267,30,121,22,"LocationEventEmitter"],[267,50,121,42],[267,51,121,43,"addListener"],[267,62,121,22],[267,63,121,55],[267,84,121,22],[267,86,121,78],[267,103,121,104],[268,0,121,104],[268,18,121,81,"watchId"],[268,25,121,104],[268,34,121,81,"watchId"],[268,41,121,104],[269,0,121,104],[269,18,121,90,"heading"],[269,25,121,104],[269,34,121,90,"heading"],[269,41,121,104],[270,0,122,8],[270,18,122,14,"callback"],[270,26,122,22],[270,29,122,25,"watchCallbacks"],[270,43,122,39],[270,44,122,40,"watchId"],[270,51,122,39],[270,52,122,8],[272,0,123,8],[272,18,123,12,"callback"],[272,26,123,8],[272,28,123,22],[273,0,124,12,"callback"],[273,16,124,12,"callback"],[273,24,124,20],[273,25,124,21,"heading"],[273,32,124,20],[273,33,124,12],[274,0,125,9],[274,15,123,8],[274,21,126,13],[275,0,127,12,"ExpoLocation"],[275,38,127,25,"removeWatchAsync"],[275,54,127,12],[275,55,127,42,"watchId"],[275,62,127,12],[276,0,128,9],[277,0,129,5],[277,13,121,22],[277,14,121,4],[278,0,130,4,"headingId"],[278,12,130,4,"headingId"],[278,21,130,13],[278,24,130,16,"_getNextWatchId"],[278,39,130,31],[278,41,130,4],[279,0,131,4,"watchCallbacks"],[279,12,131,4,"watchCallbacks"],[279,26,131,18],[279,27,131,19,"headingId"],[279,36,131,18],[279,37,131,4],[279,40,131,32,"callback"],[279,48,131,4],[280,0,116,7],[281,0,116,7],[281,46,132,10,"ExpoLocation"],[281,68,132,23,"watchDeviceHeading"],[281,86,132,10],[281,87,132,42,"headingId"],[281,96,132,10],[281,97,116,7],[283,0,116,7],[284,0,116,7],[284,46,133,11],[285,0,134,8,"remove"],[285,14,134,8,"remove"],[285,20,133,11],[285,40,134,17],[286,0,135,12,"_removeHeadingWatcher"],[286,16,135,12,"_removeHeadingWatcher"],[286,37,135,33],[286,38,135,34,"headingId"],[286,47,135,33],[286,48,135,12],[287,0,136,9],[288,0,133,11],[288,13,116,7],[290,0,116,7],[291,0,116,7],[292,0,116,7],[293,0,116,7],[294,0,116,7],[295,0,116,7],[296,0,116,7],[298,0,140,0],[298,11,140,9,"_removeHeadingWatcher"],[298,32,140,0],[298,33,140,31,"watchId"],[298,40,140,0],[298,42,140,40],[299,0,141,4],[299,8,141,8],[299,9,141,9,"watchCallbacks"],[299,23,141,23],[299,24,141,24,"watchId"],[299,31,141,23],[299,32,141,4],[299,34,141,34],[300,0,142,8],[301,0,143,5],[303,0,144,4],[303,11,144,11,"watchCallbacks"],[303,25,144,25],[303,26,144,26,"watchId"],[303,33,144,25],[303,34,144,4],[305,0,145,4,"ExpoLocation"],[305,26,145,17,"removeWatchAsync"],[305,42,145,4],[305,43,145,34,"watchId"],[305,50,145,4],[307,0,146,4],[307,8,146,8,"headingEventSub"],[307,23,146,4],[307,25,146,25],[308,0,147,8,"LocationEventEmitter"],[308,6,147,8,"LocationEventEmitter"],[308,26,147,28],[308,27,147,29,"removeSubscription"],[308,45,147,8],[308,46,147,48,"headingEventSub"],[308,61,147,8],[309,0,148,8,"headingEventSub"],[309,6,148,8,"headingEventSub"],[309,21,148,23],[309,24,148,26],[309,28,148,8],[310,0,149,5],[311,0,150,1],[313,0,152,0],[313,11,152,9,"_maybeInitializeEmitterSubscription"],[313,46,152,0],[313,49,152,47],[314,0,153,4],[314,8,153,8],[314,9,153,9,"deviceEventSubscription"],[314,32,153,4],[314,34,153,34],[315,0,154,8,"deviceEventSubscription"],[315,6,154,8,"deviceEventSubscription"],[315,29,154,31],[315,32,154,34,"LocationEventEmitter"],[315,52,154,54],[315,53,154,55,"addListener"],[315,64,154,34],[315,65,154,67],[315,87,154,34],[315,89,154,91],[315,106,154,118],[316,0,154,118],[316,12,154,94,"watchId"],[316,19,154,118],[316,28,154,94,"watchId"],[316,35,154,118],[317,0,154,118],[317,12,154,103,"location"],[317,20,154,118],[317,29,154,103,"location"],[317,37,154,118],[318,0,155,12],[318,12,155,18,"callback"],[318,20,155,26],[318,23,155,29,"watchCallbacks"],[318,37,155,43],[318,38,155,44,"watchId"],[318,45,155,43],[318,46,155,12],[320,0,156,12],[320,12,156,16,"callback"],[320,20,156,12],[320,22,156,26],[321,0,157,16,"callback"],[321,10,157,16,"callback"],[321,18,157,24],[321,19,157,25,"location"],[321,27,157,24],[321,28,157,16],[322,0,158,13],[322,9,156,12],[322,15,159,17],[323,0,160,16,"ExpoLocation"],[323,32,160,29,"removeWatchAsync"],[323,48,160,16],[323,49,160,46,"watchId"],[323,56,160,16],[324,0,161,13],[325,0,162,9],[325,7,154,34],[325,8,154,8],[326,0,163,5],[327,0,164,1],[329,0,165,7],[329,11,165,22,"geocodeAsync"],[329,23,165,7],[329,24,165,35,"address"],[329,31,165,7],[330,0,165,7],[331,0,165,7],[332,0,165,7],[333,0,165,7],[334,0,165,7],[334,46,166,11,"ExpoLocation"],[334,68,166,24,"geocodeAsync"],[334,80,166,11],[334,81,166,37,"address"],[334,88,166,11],[334,90,166,46,"catch"],[334,95,166,11],[334,96,166,52],[334,106,166,52,"error"],[334,111,166,57],[334,113,166,61],[335,0,167,8],[335,18,167,14,"platformUsesGoogleMaps"],[335,40,167,36],[335,43,167,39,"Platform"],[335,58,167,48,"OS"],[335,60,167,39],[335,65,167,55],[335,74,167,39],[335,78,167,68,"Platform"],[335,93,167,77,"OS"],[335,95,167,68],[335,100,167,84],[335,105,167,8],[337,0,168,8],[337,18,168,12,"platformUsesGoogleMaps"],[337,40,168,34],[337,44,168,38,"error"],[337,49,168,43],[337,50,168,44,"code"],[337,54,168,38],[337,59,168,53],[337,74,168,8],[337,76,168,70],[338,0,169,12],[338,20,169,16],[338,21,169,17,"googleApiKey"],[338,33,169,12],[338,35,169,31],[339,0,170,16],[339,24,170,22],[339,28,170,26,"CodedError"],[339,44,170,22],[339,45,170,37,"error"],[339,50,170,42],[339,51,170,43,"code"],[339,55,170,22],[339,57,170,52,"error"],[339,62,170,57],[339,63,170,58,"message"],[339,70,170,22],[339,122,170,16],[340,0,171,13],[342,0,172,12],[342,23,172,19,"_googleGeocodeAsync"],[342,42,172,38],[342,43,172,39,"address"],[342,50,172,38],[342,51,172,12],[343,0,173,9],[345,0,174,8],[345,20,174,14,"error"],[345,25,174,8],[346,0,175,5],[346,13,166,11],[346,14,165,7],[348,0,165,7],[349,0,165,7],[350,0,165,7],[351,0,165,7],[352,0,165,7],[353,0,165,7],[354,0,165,7],[356,0,177,7],[356,11,177,22,"reverseGeocodeAsync"],[356,30,177,7],[356,31,177,42,"location"],[356,39,177,7],[357,0,177,7],[358,0,177,7],[359,0,177,7],[360,0,177,7],[361,0,177,7],[361,18,178,8],[361,25,178,15,"location"],[361,33,178,23],[361,34,178,24,"latitude"],[361,42,178,8],[361,47,178,37],[361,55,178,8],[361,59,178,49],[361,66,178,56,"location"],[361,74,178,64],[361,75,178,65,"longitude"],[361,84,178,49],[361,89,178,79],[361,97,177,7],[362,0,177,7],[363,0,177,7],[364,0,177,7],[366,0,177,7],[366,18,179,14],[366,22,179,18,"TypeError"],[366,31,179,14],[366,32,179,28],[366,113,179,14],[366,114,177,7],[368,0,177,7],[369,0,177,7],[369,46,181,11,"ExpoLocation"],[369,68,181,24,"reverseGeocodeAsync"],[369,87,181,11],[369,88,181,44,"location"],[369,96,181,11],[369,98,181,54,"catch"],[369,103,181,11],[369,104,181,60],[369,114,181,60,"error"],[369,119,181,65],[369,121,181,69],[370,0,182,8],[370,18,182,14,"platformUsesGoogleMaps"],[370,40,182,36],[370,43,182,39,"Platform"],[370,58,182,48,"OS"],[370,60,182,39],[370,65,182,55],[370,74,182,39],[370,78,182,68,"Platform"],[370,93,182,77,"OS"],[370,95,182,68],[370,100,182,84],[370,105,182,8],[372,0,183,8],[372,18,183,12,"platformUsesGoogleMaps"],[372,40,183,34],[372,44,183,38,"error"],[372,49,183,43],[372,50,183,44,"code"],[372,54,183,38],[372,59,183,53],[372,74,183,8],[372,76,183,70],[373,0,184,12],[373,20,184,16],[373,21,184,17,"googleApiKey"],[373,33,184,12],[373,35,184,31],[374,0,185,16],[374,24,185,22],[374,28,185,26,"CodedError"],[374,44,185,22],[374,45,185,37,"error"],[374,50,185,42],[374,51,185,43,"code"],[374,55,185,22],[374,57,185,52,"error"],[374,62,185,57],[374,63,185,58,"message"],[374,70,185,22],[374,122,185,16],[375,0,186,13],[377,0,187,12],[377,23,187,19,"_googleReverseGeocodeAsync"],[377,49,187,45],[377,50,187,46,"location"],[377,58,187,45],[377,59,187,12],[378,0,188,9],[380,0,189,8],[380,20,189,14,"error"],[380,25,189,8],[381,0,190,5],[381,13,181,11],[381,14,177,7],[383,0,177,7],[384,0,177,7],[385,0,177,7],[386,0,177,7],[387,0,177,7],[388,0,177,7],[389,0,177,7],[391,0,192,7],[391,11,192,16,"setApiKey"],[391,20,192,7],[391,21,192,26,"apiKey"],[391,27,192,7],[391,29,192,34],[392,0,193,4,"googleApiKey"],[392,4,193,4,"googleApiKey"],[392,16,193,16],[392,19,193,19,"apiKey"],[392,25,193,4],[393,0,194,1],[395,0,195,0],[395,11,195,15,"_googleGeocodeAsync"],[395,30,195,0],[395,31,195,35,"address"],[395,38,195,0],[396,0,195,0],[397,0,195,0],[398,0,195,0],[399,0,195,0],[400,0,195,0],[401,0,195,0],[402,0,195,0],[402,46,196,25,"fetch"],[402,51,196,30],[402,52,196,34,"googleApiUrl"],[402,64,196,30],[402,77,196,54,"googleApiKey"],[402,89,196,30],[402,106,196,78,"encodeURI"],[402,115,196,87],[402,116,196,88,"address"],[402,123,196,87],[402,124,196,30],[402,125,195,0],[404,0,195,0],[405,0,196,10,"result"],[405,12,196,10,"result"],[405,18,195,0],[406,0,195,0],[407,0,195,0],[407,46,197,31,"result"],[407,52,197,37],[407,53,197,38,"json"],[407,57,197,31],[407,59,195,0],[409,0,195,0],[410,0,197,10,"resultObject"],[410,12,197,10,"resultObject"],[410,24,195,0],[412,0,195,0],[412,18,198,8,"resultObject"],[412,30,198,20],[412,31,198,21,"status"],[412,37,198,8],[412,42,198,32],[412,56,195,0],[413,0,195,0],[414,0,195,0],[415,0,195,0],[417,0,195,0],[417,47,199,15],[417,49,195,0],[419,0,195,0],[420,0,201,4,"assertGeocodeResults"],[420,12,201,4,"assertGeocodeResults"],[420,32,201,24],[420,33,201,25,"resultObject"],[420,45,201,24],[420,46,201,4],[421,0,195,0],[421,47,202,11,"resultObject"],[421,59,202,23],[421,60,202,24,"results"],[421,67,202,11],[421,68,202,32,"map"],[421,71,202,11],[421,72,202,36],[421,82,202,36,"result"],[421,88,202,42],[421,90,202,46],[422,0,203,8],[422,18,203,12,"location"],[422,26,203,20],[422,29,203,23,"result"],[422,35,203,29],[422,36,203,30,"geometry"],[422,44,203,23],[422,45,203,39,"location"],[422,53,203,8],[423,0,205,8],[423,21,205,15],[424,0,206,12,"latitude"],[424,16,206,12,"latitude"],[424,24,206,20],[424,26,206,22,"location"],[424,34,206,30],[424,35,206,31,"lat"],[424,38,205,15],[425,0,207,12,"longitude"],[425,16,207,12,"longitude"],[425,25,207,21],[425,27,207,23,"location"],[425,35,207,31],[425,36,207,32,"lng"],[426,0,205,15],[426,15,205,8],[427,0,209,5],[427,13,202,11],[427,14,195,0],[429,0,195,0],[430,0,195,0],[431,0,195,0],[432,0,195,0],[433,0,195,0],[434,0,195,0],[435,0,195,0],[437,0,211,0],[437,11,211,15,"_googleReverseGeocodeAsync"],[437,37,211,0],[437,38,211,42,"options"],[437,45,211,0],[438,0,211,0],[439,0,211,0],[440,0,211,0],[441,0,211,0],[442,0,211,0],[443,0,211,0],[444,0,211,0],[444,46,212,25,"fetch"],[444,51,212,30],[444,52,212,34,"googleApiUrl"],[444,64,212,30],[444,77,212,54,"googleApiKey"],[444,89,212,30],[444,105,212,77,"options"],[444,112,212,84],[444,113,212,85,"latitude"],[444,121,212,30],[444,130,212,97,"options"],[444,137,212,104],[444,138,212,105,"longitude"],[444,147,212,30],[444,148,211,0],[446,0,211,0],[447,0,212,10,"result"],[447,12,212,10,"result"],[447,18,211,0],[448,0,211,0],[449,0,211,0],[449,46,213,31,"result"],[449,52,213,37],[449,53,213,38,"json"],[449,57,213,31],[449,59,211,0],[451,0,211,0],[452,0,213,10,"resultObject"],[452,12,213,10,"resultObject"],[452,24,211,0],[454,0,211,0],[454,18,214,8,"resultObject"],[454,30,214,20],[454,31,214,21,"status"],[454,37,214,8],[454,42,214,32],[454,56,211,0],[455,0,211,0],[456,0,211,0],[457,0,211,0],[459,0,211,0],[459,47,215,15],[459,49,211,0],[461,0,211,0],[462,0,217,4,"assertGeocodeResults"],[462,12,217,4,"assertGeocodeResults"],[462,32,217,24],[462,33,217,25,"resultObject"],[462,45,217,24],[462,46,217,4],[463,0,211,0],[463,47,218,11,"resultObject"],[463,59,218,23],[463,60,218,24,"results"],[463,67,218,11],[463,68,218,32,"map"],[463,71,218,11],[463,72,218,36],[463,82,218,36,"result"],[463,88,218,42],[463,90,218,46],[464,0,219,8],[464,18,219,14,"address"],[464,25,219,21],[464,28,219,24],[464,30,219,8],[465,0,220,8,"result"],[465,14,220,8,"result"],[465,20,220,14],[465,21,220,15,"address_components"],[465,39,220,8],[465,40,220,34,"forEach"],[465,47,220,8],[465,48,220,42],[465,58,220,42,"component"],[465,67,220,51],[465,69,220,55],[466,0,221,12],[466,20,221,16,"component"],[466,29,221,25],[466,30,221,26,"types"],[466,35,221,16],[466,36,221,32,"includes"],[466,44,221,16],[466,45,221,41],[466,55,221,16],[466,56,221,12],[466,58,221,54],[467,0,222,16,"address"],[467,18,222,16,"address"],[467,25,222,23],[467,26,222,24,"city"],[467,30,222,16],[467,33,222,31,"component"],[467,42,222,40],[467,43,222,41,"long_name"],[467,52,222,16],[468,0,223,13],[468,17,221,12],[468,23,224,17],[468,27,224,21,"component"],[468,36,224,30],[468,37,224,31,"types"],[468,42,224,21],[468,43,224,37,"includes"],[468,51,224,21],[468,52,224,46],[468,68,224,21],[468,69,224,17],[468,71,224,65],[469,0,225,16,"address"],[469,18,225,16,"address"],[469,25,225,23],[469,26,225,24,"street"],[469,32,225,16],[469,35,225,33,"component"],[469,44,225,42],[469,45,225,43,"long_name"],[469,54,225,16],[470,0,226,13],[470,17,224,17],[470,23,227,17],[470,27,227,21,"component"],[470,36,227,30],[470,37,227,31,"types"],[470,42,227,21],[470,43,227,37,"includes"],[470,51,227,21],[470,52,227,46],[470,81,227,21],[470,82,227,17],[470,84,227,78],[471,0,228,16,"address"],[471,18,228,16,"address"],[471,25,228,23],[471,26,228,24,"region"],[471,32,228,16],[471,35,228,33,"component"],[471,44,228,42],[471,45,228,43,"long_name"],[471,54,228,16],[472,0,229,13],[472,17,227,17],[472,23,230,17],[472,27,230,21,"component"],[472,36,230,30],[472,37,230,31,"types"],[472,42,230,21],[472,43,230,37,"includes"],[472,51,230,21],[472,52,230,46],[472,61,230,21],[472,62,230,17],[472,64,230,58],[473,0,231,16,"address"],[473,18,231,16,"address"],[473,25,231,23],[473,26,231,24,"country"],[473,33,231,16],[473,36,231,34,"component"],[473,45,231,43],[473,46,231,44,"long_name"],[473,55,231,16],[474,0,232,13],[474,17,230,17],[474,23,233,17],[474,27,233,21,"component"],[474,36,233,30],[474,37,233,31,"types"],[474,42,233,21],[474,43,233,37,"includes"],[474,51,233,21],[474,52,233,46],[474,65,233,21],[474,66,233,17],[474,68,233,62],[475,0,234,16,"address"],[475,18,234,16,"address"],[475,25,234,23],[475,26,234,24,"postalCode"],[475,36,234,16],[475,39,234,37,"component"],[475,48,234,46],[475,49,234,47,"long_name"],[475,58,234,16],[476,0,235,13],[476,17,233,17],[476,23,236,17],[476,27,236,21,"component"],[476,36,236,30],[476,37,236,31,"types"],[476,42,236,21],[476,43,236,37,"includes"],[476,51,236,21],[476,52,236,46],[476,71,236,21],[476,72,236,17],[476,74,236,68],[477,0,237,16,"address"],[477,18,237,16,"address"],[477,25,237,23],[477,26,237,24,"name"],[477,30,237,16],[477,33,237,31,"component"],[477,42,237,40],[477,43,237,41,"long_name"],[477,52,237,16],[478,0,238,13],[479,0,239,9],[479,15,220,8],[480,0,240,8],[480,21,240,15,"address"],[480,28,240,8],[481,0,241,5],[481,13,218,11],[481,14,211,0],[483,0,211,0],[484,0,211,0],[485,0,211,0],[486,0,211,0],[487,0,211,0],[488,0,211,0],[489,0,211,0],[491,0,244,0],[491,11,244,9,"assertGeocodeResults"],[491,31,244,0],[491,32,244,30,"resultObject"],[491,44,244,0],[491,46,244,44],[492,0,244,44],[492,8,245,12,"status"],[492,14,244,44],[492,17,245,38,"resultObject"],[492,29,244,44],[492,30,245,12,"status"],[492,36,244,44],[493,0,244,44],[493,8,245,20,"error_message"],[493,21,244,44],[493,24,245,38,"resultObject"],[493,36,244,44],[493,37,245,20,"error_message"],[493,50,244,44],[495,0,246,4],[495,8,246,8,"status"],[495,14,246,14],[495,19,246,19],[495,33,246,8],[495,37,246,37,"status"],[495,43,246,43],[495,48,246,48],[495,52,246,4],[495,54,246,54],[496,0,247,8],[496,10,247,12,"error_message"],[496,23,247,8],[496,25,247,27],[497,0,248,12],[497,14,248,18],[497,18,248,22,"CodedError"],[497,34,248,18],[497,35,248,33,"status"],[497,41,248,18],[497,43,248,41,"error_message"],[497,56,248,18],[497,57,248,12],[498,0,249,9],[498,7,247,8],[498,13,250,13],[498,17,250,17,"status"],[498,23,250,23],[498,28,250,28],[498,43,250,13],[498,45,250,45],[499,0,251,12],[499,14,251,18],[499,18,251,22,"CodedError"],[499,34,251,18],[499,35,251,33,"status"],[499,41,251,18],[499,43,251,41],[499,144,251,18],[499,145,251,12],[500,0,252,9],[502,0,253,8],[502,12,253,14],[502,16,253,18,"CodedError"],[502,32,253,14],[502,33,253,29,"status"],[502,39,253,14],[502,79,253,8],[503,0,254,5],[504,0,255,1],[506,0,257,0],[506,11,257,9,"watchPosition"],[506,24,257,0],[506,25,257,23,"success"],[506,32,257,0],[506,34,257,32,"error"],[506,39,257,0],[506,41,257,39,"options"],[506,48,257,0],[506,50,257,48],[507,0,258,4,"_maybeInitializeEmitterSubscription"],[507,4,258,4,"_maybeInitializeEmitterSubscription"],[507,39,258,39],[509,0,259,4],[509,8,259,10,"watchId"],[509,15,259,17],[509,18,259,20,"_getNextWatchId"],[509,33,259,35],[509,35,259,4],[511,0,260,4,"watchCallbacks"],[511,4,260,4,"watchCallbacks"],[511,18,260,18],[511,19,260,19,"watchId"],[511,26,260,18],[511,27,260,4],[511,30,260,30,"success"],[511,37,260,4],[513,0,261,4,"ExpoLocation"],[513,26,261,17,"watchPositionImplAsync"],[513,48,261,4],[513,49,261,40,"watchId"],[513,56,261,4],[513,58,261,49,"options"],[513,65,261,4],[513,67,261,58,"catch"],[513,72,261,4],[513,73,261,64],[513,83,261,64,"err"],[513,86,261,67],[513,88,261,71],[514,0,262,8,"_removeWatcher"],[514,6,262,8,"_removeWatcher"],[514,20,262,22],[514,21,262,23,"watchId"],[514,28,262,22],[514,29,262,8],[516,0,263,8,"error"],[516,6,263,8,"error"],[516,11,263,13],[516,12,263,14],[517,0,263,16,"watchId"],[517,8,263,16,"watchId"],[517,15,263,23],[517,17,263,16,"watchId"],[517,24,263,14],[518,0,263,25,"message"],[518,8,263,25,"message"],[518,15,263,32],[518,17,263,34,"err"],[518,20,263,37],[518,21,263,38,"message"],[518,28,263,14],[519,0,263,47,"code"],[519,8,263,47,"code"],[519,12,263,51],[519,14,263,53,"err"],[519,17,263,56],[519,18,263,57,"code"],[520,0,263,14],[520,7,263,13],[520,8,263,8],[521,0,264,5],[521,5,261,4],[523,0,265,4],[523,11,265,11,"watchId"],[523,18,265,4],[524,0,266,1],[526,0,267,7],[526,11,267,22,"watchPositionAsync"],[526,29,267,7],[526,30,267,41,"options"],[526,37,267,7],[526,39,267,50,"callback"],[526,47,267,7],[527,0,267,7],[528,0,267,7],[529,0,267,7],[530,0,267,7],[531,0,267,7],[532,0,268,4,"_maybeInitializeEmitterSubscription"],[532,12,268,4,"_maybeInitializeEmitterSubscription"],[532,47,268,39],[534,0,269,10,"watchId"],[534,12,269,10,"watchId"],[534,19,267,7],[534,22,269,20,"_getNextWatchId"],[534,37,269,35],[534,39,267,7],[535,0,270,4,"watchCallbacks"],[535,12,270,4,"watchCallbacks"],[535,26,270,18],[535,27,270,19,"watchId"],[535,34,270,18],[535,35,270,4],[535,38,270,30,"callback"],[535,46,270,4],[536,0,267,7],[537,0,267,7],[537,46,271,10,"ExpoLocation"],[537,68,271,23,"watchPositionImplAsync"],[537,90,271,10],[537,91,271,46,"watchId"],[537,98,271,10],[537,100,271,55,"options"],[537,107,271,10],[537,108,267,7],[539,0,267,7],[540,0,267,7],[540,47,272,11],[541,0,273,8,"remove"],[541,14,273,8,"remove"],[541,20,272,11],[541,40,273,17],[542,0,274,12,"_removeWatcher"],[542,16,274,12,"_removeWatcher"],[542,30,274,26],[542,31,274,27,"watchId"],[542,38,274,26],[542,39,274,12],[543,0,275,9],[544,0,272,11],[544,13,267,7],[546,0,267,7],[547,0,267,7],[548,0,267,7],[549,0,267,7],[550,0,267,7],[551,0,267,7],[552,0,267,7],[554,0,279,0],[554,11,279,9,"clearWatch"],[554,21,279,0],[554,22,279,20,"watchId"],[554,29,279,0],[554,31,279,29],[555,0,280,4,"_removeWatcher"],[555,4,280,4,"_removeWatcher"],[555,18,280,18],[555,19,280,19,"watchId"],[555,26,280,18],[555,27,280,4],[556,0,281,1],[558,0,282,0],[558,11,282,9,"_removeWatcher"],[558,25,282,0],[558,26,282,24,"watchId"],[558,33,282,0],[558,35,282,33],[559,0,284,4],[559,8,284,8],[559,9,284,9,"watchCallbacks"],[559,23,284,23],[559,24,284,24,"watchId"],[559,31,284,23],[559,32,284,4],[559,34,284,34],[560,0,285,8],[561,0,286,5],[563,0,287,4,"ExpoLocation"],[563,26,287,17,"removeWatchAsync"],[563,42,287,4],[563,43,287,34,"watchId"],[563,50,287,4],[565,0,288,4],[565,11,288,11,"watchCallbacks"],[565,25,288,25],[565,26,288,26,"watchId"],[565,33,288,25],[565,34,288,4],[567,0,289,4],[567,8,289,8,"Object"],[567,14,289,14],[567,15,289,15,"keys"],[567,19,289,8],[567,20,289,20,"watchCallbacks"],[567,34,289,8],[567,36,289,36,"length"],[567,42,289,8],[567,47,289,47],[567,48,289,8],[567,52,289,52,"deviceEventSubscription"],[567,75,289,4],[567,77,289,77],[568,0,290,8,"LocationEventEmitter"],[568,6,290,8,"LocationEventEmitter"],[568,26,290,28],[568,27,290,29,"removeSubscription"],[568,45,290,8],[568,46,290,48,"deviceEventSubscription"],[568,69,290,8],[569,0,291,8,"deviceEventSubscription"],[569,6,291,8,"deviceEventSubscription"],[569,29,291,31],[569,32,291,34],[569,36,291,8],[570,0,292,5],[571,0,293,1],[573,0,294,0],[573,11,294,9,"getCurrentPosition"],[573,29,294,0],[573,30,294,28,"success"],[573,37,294,0],[573,39,294,70],[574,0,294,70],[574,8,294,37,"error"],[574,13,294,70],[574,84,294,45],[574,96,294,51],[574,97,294,54],[574,98,294,70],[575,0,294,70],[575,8,294,56,"options"],[575,15,294,70],[575,86,294,66],[575,88,294,70],[576,0,295,4],[576,28,295,14],[576,35,295,21,"success"],[576,42,295,14],[576,47,295,33],[576,57,295,4],[576,59,295,45],[576,99,295,4],[577,0,296,4],[577,28,296,14],[577,35,296,21,"options"],[577,42,296,14],[577,47,296,33],[577,55,296,4],[577,57,296,43],[577,85,296,4],[579,0,297,4,"_getCurrentPositionAsyncWrapper"],[579,4,297,4,"_getCurrentPositionAsyncWrapper"],[579,35,297,35],[579,36,297,36,"success"],[579,43,297,35],[579,45,297,45,"error"],[579,50,297,35],[579,52,297,52,"options"],[579,59,297,35],[579,60,297,4],[580,0,298,1],[582,0,301,0],[582,11,301,15,"_getCurrentPositionAsyncWrapper"],[582,42,301,0],[582,43,301,47,"success"],[582,50,301,0],[582,52,301,56,"error"],[582,57,301,0],[582,59,301,63,"options"],[582,66,301,0],[583,0,301,0],[584,0,301,0],[585,0,301,0],[586,0,301,0],[587,0,301,0],[588,0,301,0],[589,0,301,0],[590,0,301,0],[590,46,303,14,"ExpoLocation"],[590,68,303,27,"requestPermissionsAsync"],[590,91,303,14],[590,93,301,0],[592,0,301,0],[593,0,301,0],[594,0,301,0],[594,46,304,29,"getCurrentPositionAsync"],[594,69,304,52],[594,70,304,53,"options"],[594,77,304,52],[594,78,301,0],[596,0,301,0],[597,0,304,14,"result"],[597,12,304,14,"result"],[597,18,301,0],[598,0,305,8,"success"],[598,12,305,8,"success"],[598,19,305,15],[598,20,305,16,"result"],[598,26,305,15],[598,27,305,8],[599,0,301,0],[600,0,301,0],[602,0,301,0],[603,0,301,0],[604,0,301,0],[605,0,308,8,"error"],[605,12,308,8,"error"],[605,17,308,13],[605,32,308,8],[607,0,301,0],[608,0,301,0],[609,0,301,0],[610,0,301,0],[611,0,301,0],[612,0,301,0],[613,0,301,0],[615,0,311,7],[615,11,311,22,"getPermissionsAsync"],[615,30,311,7],[616,0,311,7],[617,0,311,7],[618,0,311,7],[619,0,311,7],[620,0,311,7],[621,0,311,7],[621,46,312,17,"ExpoLocation"],[621,68,312,30,"getPermissionsAsync"],[621,87,312,17],[621,89,311,7],[623,0,311,7],[624,0,311,7],[626,0,311,7],[627,0,311,7],[628,0,311,7],[629,0,311,7],[630,0,311,7],[631,0,311,7],[632,0,311,7],[634,0,314,7],[634,11,314,22,"requestPermissionsAsync"],[634,34,314,7],[635,0,314,7],[636,0,314,7],[637,0,314,7],[638,0,314,7],[639,0,314,7],[640,0,314,7],[640,46,315,17,"ExpoLocation"],[640,68,315,30,"requestPermissionsAsync"],[640,91,315,17],[640,93,314,7],[642,0,314,7],[643,0,314,7],[645,0,314,7],[646,0,314,7],[647,0,314,7],[648,0,314,7],[649,0,314,7],[650,0,314,7],[651,0,314,7],[653,0,318,7],[653,11,318,22,"hasServicesEnabledAsync"],[653,34,318,7],[654,0,318,7],[655,0,318,7],[656,0,318,7],[657,0,318,7],[658,0,318,7],[659,0,318,7],[659,46,319,17,"ExpoLocation"],[659,68,319,30,"hasServicesEnabledAsync"],[659,91,319,17],[659,93,318,7],[661,0,318,7],[662,0,318,7],[664,0,318,7],[665,0,318,7],[666,0,318,7],[667,0,318,7],[668,0,318,7],[669,0,318,7],[670,0,318,7],[672,0,322,0],[672,11,322,9,"_validateTaskName"],[672,28,322,0],[672,29,322,27,"taskName"],[672,37,322,0],[672,39,322,37],[673,0,323,4],[673,28,323,14,"taskName"],[673,36,323,22],[673,40,323,26],[673,47,323,33,"taskName"],[673,55,323,26],[673,60,323,46],[673,68,323,4],[673,70,323,56],[673,110,323,4],[674,0,324,1],[676,0,325,7],[676,11,325,22,"isBackgroundLocationAvailableAsync"],[676,45,325,7],[677,0,325,7],[678,0,325,7],[679,0,325,7],[680,0,325,7],[681,0,325,7],[682,0,325,7],[683,0,325,7],[683,46,326,33,"getProviderStatusAsync"],[683,68,326,55],[683,70,325,7],[685,0,325,7],[686,0,326,10,"providerStatus"],[686,12,326,10,"providerStatus"],[686,26,325,7],[687,0,325,7],[687,47,327,11,"providerStatus"],[687,61,327,25],[687,62,327,26,"backgroundModeEnabled"],[687,83,325,7],[689,0,325,7],[690,0,325,7],[691,0,325,7],[692,0,325,7],[693,0,325,7],[694,0,325,7],[695,0,325,7],[697,0,329,7],[697,11,329,22,"startLocationUpdatesAsync"],[697,36,329,7],[697,37,329,48,"taskName"],[697,45,329,7],[698,0,329,7],[699,0,329,7],[700,0,329,7],[701,0,329,7],[702,0,329,7],[703,0,329,7],[704,0,329,58,"options"],[704,12,329,58,"options"],[704,19,329,7],[704,84,329,68],[705,0,329,70,"accuracy"],[705,14,329,70,"accuracy"],[705,22,329,78],[705,24,329,80,"LocationAccuracy"],[705,40,329,96],[705,41,329,97,"Balanced"],[706,0,329,68],[706,13,329,7],[708,0,330,4,"_validateTaskName"],[708,12,330,4,"_validateTaskName"],[708,29,330,21],[708,30,330,22,"taskName"],[708,38,330,21],[708,39,330,4],[710,0,329,7],[711,0,329,7],[711,46,331,10,"ExpoLocation"],[711,68,331,23,"startLocationUpdatesAsync"],[711,93,331,10],[711,94,331,49,"taskName"],[711,102,331,10],[711,104,331,59,"options"],[711,111,331,10],[711,112,329,7],[713,0,329,7],[714,0,329,7],[715,0,329,7],[716,0,329,7],[717,0,329,7],[718,0,329,7],[719,0,329,7],[721,0,333,7],[721,11,333,22,"stopLocationUpdatesAsync"],[721,35,333,7],[721,36,333,47,"taskName"],[721,44,333,7],[722,0,333,7],[723,0,333,7],[724,0,333,7],[725,0,333,7],[726,0,334,4,"_validateTaskName"],[726,12,334,4,"_validateTaskName"],[726,29,334,21],[726,30,334,22,"taskName"],[726,38,334,21],[726,39,334,4],[728,0,333,7],[729,0,333,7],[729,46,335,10,"ExpoLocation"],[729,68,335,23,"stopLocationUpdatesAsync"],[729,92,335,10],[729,93,335,48,"taskName"],[729,101,335,10],[729,102,333,7],[731,0,333,7],[732,0,333,7],[733,0,333,7],[734,0,333,7],[735,0,333,7],[736,0,333,7],[737,0,333,7],[739,0,337,7],[739,11,337,22,"hasStartedLocationUpdatesAsync"],[739,41,337,7],[739,42,337,53,"taskName"],[739,50,337,7],[740,0,337,7],[741,0,337,7],[742,0,337,7],[743,0,337,7],[744,0,338,4,"_validateTaskName"],[744,12,338,4,"_validateTaskName"],[744,29,338,21],[744,30,338,22,"taskName"],[744,38,338,21],[744,39,338,4],[746,0,337,7],[746,47,339,11,"ExpoLocation"],[746,69,339,24,"hasStartedLocationUpdatesAsync"],[746,99,339,11],[746,100,339,55,"taskName"],[746,108,339,11],[746,109,337,7],[748,0,337,7],[749,0,337,7],[750,0,337,7],[751,0,337,7],[752,0,337,7],[753,0,337,7],[754,0,337,7],[756,0,342,0],[756,11,342,9,"_validateRegions"],[756,27,342,0],[756,28,342,26,"regions"],[756,35,342,0],[756,37,342,35],[757,0,343,4],[757,8,343,8],[757,9,343,9,"regions"],[757,16,343,8],[757,20,343,20,"regions"],[757,27,343,27],[757,28,343,28,"length"],[757,34,343,20],[757,39,343,39],[757,40,343,4],[757,42,343,42],[758,0,344,8],[758,12,344,14],[758,16,344,18,"Error"],[758,21,344,14],[758,22,344,24],[758,123,344,14],[758,124,344,8],[759,0,345,5],[761,0,346,4],[761,25,346,25,"regions"],[761,32,346,4],[761,192,346,34],[762,0,346,34],[764,0,346,34],[765,0,346,34],[766,0,346,34],[767,0,346,34],[768,0,346,34],[769,0,346,34],[770,0,346,34],[771,0,346,34],[773,0,346,34],[773,10,346,15,"region"],[773,17,346,34],[775,0,347,8],[775,10,347,12],[775,17,347,19,"region"],[775,24,347,25],[775,25,347,26,"latitude"],[775,33,347,12],[775,38,347,39],[775,46,347,8],[775,48,347,49],[776,0,348,12],[776,14,348,18],[776,18,348,22,"TypeError"],[776,27,348,18],[776,74,348,76,"region"],[776,81,348,82],[776,82,348,83,"latitude"],[776,90,348,18],[776,106,348,12],[777,0,349,9],[779,0,350,8],[779,10,350,12],[779,17,350,19,"region"],[779,24,350,25],[779,25,350,26,"longitude"],[779,34,350,12],[779,39,350,40],[779,47,350,8],[779,49,350,50],[780,0,351,12],[780,14,351,18],[780,18,351,22,"TypeError"],[780,27,351,18],[780,75,351,77,"region"],[780,82,351,83],[780,83,351,84,"longitude"],[780,92,351,18],[780,108,351,12],[781,0,352,9],[783,0,353,8],[783,10,353,12],[783,17,353,19,"region"],[783,24,353,25],[783,25,353,26,"radius"],[783,31,353,12],[783,36,353,37],[783,44,353,8],[783,46,353,47],[784,0,354,12],[784,14,354,18],[784,18,354,22,"TypeError"],[784,27,354,18],[784,72,354,74,"region"],[784,79,354,80],[784,80,354,81,"radius"],[784,86,354,18],[784,102,354,12],[785,0,355,9],[786,0,356,5],[787,0,357,1],[789,0,358,7],[789,11,358,22,"startGeofencingAsync"],[789,31,358,7],[789,32,358,43,"taskName"],[789,40,358,7],[790,0,358,7],[791,0,358,7],[792,0,358,7],[793,0,358,7],[794,0,358,7],[795,0,358,7],[796,0,358,53,"regions"],[796,12,358,53,"regions"],[796,19,358,7],[796,84,358,63],[796,86,358,7],[798,0,359,4,"_validateTaskName"],[798,12,359,4,"_validateTaskName"],[798,29,359,21],[798,30,359,22,"taskName"],[798,38,359,21],[798,39,359,4],[800,0,360,4,"_validateRegions"],[800,12,360,4,"_validateRegions"],[800,28,360,20],[800,29,360,21,"regions"],[800,36,360,20],[800,37,360,4],[802,0,358,7],[803,0,358,7],[803,46,361,10,"ExpoLocation"],[803,68,361,23,"startGeofencingAsync"],[803,88,361,10],[803,89,361,44,"taskName"],[803,97,361,10],[803,99,361,54],[804,0,361,56,"regions"],[804,14,361,56,"regions"],[804,21,361,63],[804,23,361,56,"regions"],[805,0,361,54],[805,13,361,10],[805,14,358,7],[807,0,358,7],[808,0,358,7],[809,0,358,7],[810,0,358,7],[811,0,358,7],[812,0,358,7],[813,0,358,7],[815,0,363,7],[815,11,363,22,"stopGeofencingAsync"],[815,30,363,7],[815,31,363,42,"taskName"],[815,39,363,7],[816,0,363,7],[817,0,363,7],[818,0,363,7],[819,0,363,7],[820,0,364,4,"_validateTaskName"],[820,12,364,4,"_validateTaskName"],[820,29,364,21],[820,30,364,22,"taskName"],[820,38,364,21],[820,39,364,4],[822,0,363,7],[823,0,363,7],[823,46,365,10,"ExpoLocation"],[823,68,365,23,"stopGeofencingAsync"],[823,87,365,10],[823,88,365,43,"taskName"],[823,96,365,10],[823,97,363,7],[825,0,363,7],[826,0,363,7],[827,0,363,7],[828,0,363,7],[829,0,363,7],[830,0,363,7],[831,0,363,7],[833,0,367,7],[833,11,367,22,"hasStartedGeofencingAsync"],[833,36,367,7],[833,37,367,48,"taskName"],[833,45,367,7],[834,0,367,7],[835,0,367,7],[836,0,367,7],[837,0,367,7],[838,0,368,4,"_validateTaskName"],[838,12,368,4,"_validateTaskName"],[838,29,368,21],[838,30,368,22,"taskName"],[838,38,368,21],[838,39,368,4],[840,0,367,7],[840,47,369,11,"ExpoLocation"],[840,69,369,24,"hasStartedGeofencingAsync"],[840,94,369,11],[840,95,369,50,"taskName"],[840,103,369,11],[840,104,367,7],[842,0,367,7],[843,0,367,7],[844,0,367,7],[845,0,367,7],[846,0,367,7],[847,0,367,7],[848,0,367,7],[850,0,371,7],[850,11,371,16,"installWebGeolocationPolyfill"],[850,40,371,7],[850,43,371,48],[851,0,372,4],[851,8,372,8,"Platform"],[851,23,372,17,"OS"],[851,25,372,8],[851,30,372,24],[851,35,372,4],[851,37,372,31],[852,0,376,8,"window"],[852,6,376,8,"window"],[852,12,376,14],[852,13,376,15,"navigator"],[852,22,376,8],[852,23,376,25,"geolocation"],[852,34,376,8],[852,37,376,39],[853,0,377,12,"getCurrentPosition"],[853,8,377,12,"getCurrentPosition"],[853,26,377,30],[853,28,377,12,"getCurrentPosition"],[853,46,376,39],[854,0,378,12,"watchPosition"],[854,8,378,12,"watchPosition"],[854,21,378,25],[854,23,378,12,"watchPosition"],[854,36,376,39],[855,0,379,12,"clearWatch"],[855,8,379,12,"clearWatch"],[855,18,379,22],[855,20,379,12,"clearWatch"],[855,30,376,39],[856,0,382,12,"stopObserving"],[856,8,382,12,"stopObserving"],[856,21,382,25],[856,23,382,27],[856,48,382,33],[856,49,382,36],[857,0,376,39],[857,7,376,8],[858,0,384,5],[859,0,385,1]],"functionMap":{"names":["<global>","<anonymous>","_getNextWatchId","_getCurrentWatchId","getProviderStatusAsync","enableNetworkProviderAsync","getCurrentPositionAsync","getLastKnownPositionAsync","getHeadingAsync","Promise$argument_0","LocationEventEmitter.addListener$argument_1","watchHeadingAsync$argument_0","watchHeadingAsync","remove","_removeHeadingWatcher","_maybeInitializeEmitterSubscription","geocodeAsync","ExpoLocation.geocodeAsync._catch$argument_0","reverseGeocodeAsync","ExpoLocation.reverseGeocodeAsync._catch$argument_0","setApiKey","_googleGeocodeAsync","resultObject.results.map$argument_0","_googleReverseGeocodeAsync","result.address_components.forEach$argument_0","assertGeocodeResults","watchPosition","ExpoLocation.watchPositionImplAsync._catch$argument_0","watchPositionAsync","clearWatch","_removeWatcher","getCurrentPosition","_getCurrentPositionAsyncWrapper","getPermissionsAsync","requestPermissionsAsync","hasServicesEnabledAsync","_validateTaskName","isBackgroundLocationAvailableAsync","startLocationUpdatesAsync","stopLocationUpdatesAsync","hasStartedLocationUpdatesAsync","_validateRegions","startGeofencingAsync","stopGeofencingAsync","hasStartedGeofencingAsync","installWebGeolocationPolyfill","window.navigator.geolocation.stopObserving"],"mappings":"AAA;CCO;CDO;CCE;CDM;CCG;CDG;CCE;CDI;AEG;CFG;AGC;CHE;OIM;CJE;OKC;CLQ;OMC;CNE;OOC;CPE;OQI;uBCC;2FCK;iBDQ;uDEM;iBFc;KDS;CRC;OYC;8EFK;KEQ;QCK;SDE;CZE;AcE;CdU;AeE;2FLE;SKQ;CfE;OgBC;oDCC;KDS;ChBC;OkBC;4DCI;KDS;ClBC;OoBC;CpBE;AqBC;oCCO;KDO;CrBC;AuBC;oCDO;0CEE;SFmB;KCE;CvBC;AyBE;CzBW;A0BE;gECI;KDG;C1BE;O4BC;QfM;SeE;C5BE;A6BE;C7BE;A8BC;C9BW;A+BC,6C9B,S8B;C/BI;AgCG;ChCS;OiCC;CjCE;OkCC;ClCE;OmCE;CnCE;AoCE;CpCE;OqCC;CrCG;OsCC;CtCG;OuCC;CvCG;OwCC;CxCG;AyCE;CzCe;O0CC;C1CI;O2CC;C3CG;O4CC;C5CG;O6CC;2BCW,SD;C7CG"}},"type":"js/module"}]}